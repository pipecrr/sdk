### YamlMime:ManagedReference
items:
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1
  commentId: T:Siesa.SDK.Backend.Access.DbSetProxy`1
  id: DbSetProxy`1
  parent: Siesa.SDK.Backend.Access
  children:
  - Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0})
  - Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0},System.Linq.IQueryable{`0})
  - Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType
  - Siesa.SDK.Backend.Access.DbSetProxy`1.Find(System.Object[])
  - Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[])
  - Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  - Siesa.SDK.Backend.Access.DbSetProxy`1.Local
  - Siesa.SDK.Backend.Access.DbSetProxy`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: DbSetProxy<TEntity>
  nameWithType: DbSetProxy<TEntity>
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>
  type: Class
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: DbSetProxy
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 23
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  syntax:
    content: 'public class DbSetProxy<TEntity> : DbSet<TEntity>, IQueryable<TEntity>, IEnumerable<TEntity>, IInfrastructure<IServiceProvider>, IListSource, IQueryable<TEntity>, IEnumerable<TEntity>, IQueryable, IEnumerable, IAsyncEnumerable<TEntity> where TEntity : class'
    typeParameters:
    - id: TEntity
    content.vb: Public Class DbSetProxy(Of TEntity As Class) Inherits DbSet(Of TEntity) Implements IQueryable(Of TEntity), IEnumerable(Of TEntity), IInfrastructure(Of IServiceProvider), IListSource, IQueryable(Of TEntity), IEnumerable(Of TEntity), IQueryable, IEnumerable, IAsyncEnumerable(Of TEntity)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  implements:
  - System.Linq.IQueryable{{TEntity}}
  - System.Collections.Generic.IEnumerable{{TEntity}}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  - System.ComponentModel.IListSource
  - System.Linq.IQueryable{{TEntity}}
  - System.Collections.Generic.IEnumerable{{TEntity}}
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  - System.Collections.Generic.IAsyncEnumerable{{TEntity}}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AsAsyncEnumerable
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AsQueryable
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Add({TEntity})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddAsync({TEntity},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Attach({TEntity})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Update({TEntity})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRange({TEntity}[])
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRangeAsync({TEntity}[])
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AttachRange({TEntity}[])
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.RemoveRange({TEntity}[])
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.UpdateRange({TEntity}[])
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRange(System.Collections.Generic.IEnumerable{{TEntity}})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRangeAsync(System.Collections.Generic.IEnumerable{{TEntity}},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AttachRange(System.Collections.Generic.IEnumerable{{TEntity}})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.RemoveRange(System.Collections.Generic.IEnumerable{{TEntity}})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.UpdateRange(System.Collections.Generic.IEnumerable{{TEntity}})
  - Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.IQueryable.Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  nameWithType.vb: DbSetProxy(Of TEntity)
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity)
  name.vb: DbSetProxy(Of TEntity)
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType
  commentId: P:Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType
  id: EntityType
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: DbSetProxy<TEntity>.EntityType
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.EntityType
  type: Property
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: EntityType
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 27
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  summary: The <xref href="Microsoft.EntityFrameworkCore.Metadata.IEntityType" data-throw-if-not-resolved="false"></xref> metadata associated with this set.
  example: []
  syntax:
    content: public override IEntityType EntityType { get; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    content.vb: Public Overrides ReadOnly Property EntityType As IEntityType
  overridden: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.EntityType
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType*
  nameWithType.vb: DbSetProxy(Of TEntity).EntityType
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).EntityType
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0})
  commentId: M:Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0})
  id: '#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0})'
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: DbSetProxy(IAuthenticationService, SDKContext, DbSet<TEntity>)
  nameWithType: DbSetProxy<TEntity>.DbSetProxy(IAuthenticationService, SDKContext, DbSet<TEntity>)
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.DbSetProxy(Siesa.SDK.Shared.Services.IAuthenticationService, Siesa.SDK.Backend.Access.SDKContext, Microsoft.EntityFrameworkCore.DbSet<TEntity>)
  type: Constructor
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: .ctor
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 57
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  syntax:
    content: public DbSetProxy(IAuthenticationService authenticationService, SDKContext context, DbSet<TEntity> set)
    parameters:
    - id: authenticationService
      type: Siesa.SDK.Shared.Services.IAuthenticationService
    - id: context
      type: Siesa.SDK.Backend.Access.SDKContext
    - id: set
      type: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
    content.vb: Public Sub New(authenticationService As IAuthenticationService, context As SDKContext, [set] As DbSet(Of TEntity))
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor*
  nameWithType.vb: DbSetProxy(Of TEntity).New(IAuthenticationService, SDKContext, DbSet(Of TEntity))
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).New(Siesa.SDK.Shared.Services.IAuthenticationService, Siesa.SDK.Backend.Access.SDKContext, Microsoft.EntityFrameworkCore.DbSet(Of TEntity))
  name.vb: New(IAuthenticationService, SDKContext, DbSet(Of TEntity))
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0},System.Linq.IQueryable{`0})
  commentId: M:Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0},System.Linq.IQueryable{`0})
  id: '#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0},System.Linq.IQueryable{`0})'
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: DbSetProxy(IAuthenticationService, SDKContext, DbSet<TEntity>, IQueryable<TEntity>)
  nameWithType: DbSetProxy<TEntity>.DbSetProxy(IAuthenticationService, SDKContext, DbSet<TEntity>, IQueryable<TEntity>)
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.DbSetProxy(Siesa.SDK.Shared.Services.IAuthenticationService, Siesa.SDK.Backend.Access.SDKContext, Microsoft.EntityFrameworkCore.DbSet<TEntity>, System.Linq.IQueryable<TEntity>)
  type: Constructor
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: .ctor
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 62
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  syntax:
    content: public DbSetProxy(IAuthenticationService authenticationService, SDKContext context, DbSet<TEntity> set, IQueryable<TEntity> query)
    parameters:
    - id: authenticationService
      type: Siesa.SDK.Shared.Services.IAuthenticationService
    - id: context
      type: Siesa.SDK.Backend.Access.SDKContext
    - id: set
      type: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Sub New(authenticationService As IAuthenticationService, context As SDKContext, [set] As DbSet(Of TEntity), query As IQueryable(Of TEntity))
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor*
  nameWithType.vb: DbSetProxy(Of TEntity).New(IAuthenticationService, SDKContext, DbSet(Of TEntity), IQueryable(Of TEntity))
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).New(Siesa.SDK.Shared.Services.IAuthenticationService, Siesa.SDK.Backend.Access.SDKContext, Microsoft.EntityFrameworkCore.DbSet(Of TEntity), System.Linq.IQueryable(Of TEntity))
  name.vb: New(IAuthenticationService, SDKContext, DbSet(Of TEntity), IQueryable(Of TEntity))
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.Find(System.Object[])
  commentId: M:Siesa.SDK.Backend.Access.DbSetProxy`1.Find(System.Object[])
  id: Find(System.Object[])
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: Find(params object?[]?)
  nameWithType: DbSetProxy<TEntity>.Find(params object?[]?)
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.Find(params object?[]?)
  type: Method
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: Find
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 223
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  summary: >-
    Finds an entity with the given primary key values. If an entity with the given primary key values

    is being tracked by the context, then it is returned immediately without making a request to the

    database. Otherwise, a query is made to the database for an entity with the given primary key values

    and this entity, if found, is attached to the context and returned. If no entity is found, then

    null is returned.
  remarks: See <a href="https://aka.ms/efcore-docs-find">Using Find and FindAsync</a> for more information.
  example: []
  syntax:
    content: public override TEntity? Find(params object?[]? keyValues)
    parameters:
    - id: keyValues
      type: System.Object[]
      description: The values of the primary key for the entity to be found.
    return:
      type: '{TEntity}'
      description: The entity found, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Overrides Function Find(ParamArray keyValues As Object()) As TEntity
  overridden: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Find(System.Object[])
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.Find*
  nameWithType.vb: DbSetProxy(Of TEntity).Find(ParamArray Object())
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).Find(ParamArray Object())
  name.vb: Find(ParamArray Object())
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[])
  commentId: M:Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[])
  id: FindAsync(System.Object[])
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: FindAsync(params object?[]?)
  nameWithType: DbSetProxy<TEntity>.FindAsync(params object?[]?)
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.FindAsync(params object?[]?)
  type: Method
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: FindAsync
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 229
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  summary: >-
    Finds an entity with the given primary key values. If an entity with the given primary key values

    is being tracked by the context, then it is returned immediately without making a request to the

    database. Otherwise, a query is made to the database for an entity with the given primary key values

    and this entity, if found, is attached to the context and returned. If no entity is found, then

    null is returned.
  remarks: See <a href="https://aka.ms/efcore-docs-find">Using Find and FindAsync</a> for more information.
  example: []
  syntax:
    content: public override ValueTask<TEntity?> FindAsync(params object?[]? keyValues)
    parameters:
    - id: keyValues
      type: System.Object[]
      description: The values of the primary key for the entity to be found.
    return:
      type: System.Threading.Tasks.ValueTask{{TEntity}}
      description: The entity found, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Overrides Function FindAsync(ParamArray keyValues As Object()) As ValueTask(Of TEntity)
  overridden: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.FindAsync(System.Object[])
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync*
  nameWithType.vb: DbSetProxy(Of TEntity).FindAsync(ParamArray Object())
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).FindAsync(ParamArray Object())
  name.vb: FindAsync(ParamArray Object())
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  id: FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: FindAsync(object?[]?, CancellationToken)
  nameWithType: DbSetProxy<TEntity>.FindAsync(object?[]?, CancellationToken)
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.FindAsync(object?[]?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: FindAsync
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 235
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  summary: >-
    Finds an entity with the given primary key values. If an entity with the given primary key values

    is being tracked by the context, then it is returned immediately without making a request to the

    database. Otherwise, a query is made to the database for an entity with the given primary key values

    and this entity, if found, is attached to the context and returned. If no entity is found, then

    null is returned.
  remarks: See <a href="https://aka.ms/efcore-docs-find">Using Find and FindAsync</a> for more information.
  example: []
  syntax:
    content: public override ValueTask<TEntity?> FindAsync(object?[]? keyValues, CancellationToken cancellationToken)
    parameters:
    - id: keyValues
      type: System.Object[]
      description: The values of the primary key for the entity to be found.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.ValueTask{{TEntity}}
      description: The entity found, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Overrides Function FindAsync(keyValues As Object(), cancellationToken As CancellationToken) As ValueTask(Of TEntity)
  overridden: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.FindAsync(System.Object[],System.Threading.CancellationToken)
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: If the <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> is canceled.
  nameWithType.vb: DbSetProxy(Of TEntity).FindAsync(Object(), CancellationToken)
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).FindAsync(Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.Local
  commentId: P:Siesa.SDK.Backend.Access.DbSetProxy`1.Local
  id: Local
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: Local
  nameWithType: DbSetProxy<TEntity>.Local
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.Local
  type: Property
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: Local
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 240
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  summary: >-
    <p>
                        Gets a <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.LocalView%601" data-throw-if-not-resolved="false"></xref> that represents a local view of all Added, Unchanged,
                        and Modified entities in this set.
                    </p>
    <p>
                        This local view will stay in sync as entities are added or removed from the context. Likewise, entities
                        added to or removed from the local view will automatically be added to or removed
                        from the context.
                    </p>
    <p>
                        This property can be used for data binding by populating the set with data, for example by using the
                        <xref href="Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load%60%601(System.Linq.IQueryable%7b%60%600%7d)" data-throw-if-not-resolved="false"></xref> extension method,
                        and then binding to the local data through this property by calling
                        <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.LocalView%601.ToObservableCollection" data-throw-if-not-resolved="false"></xref> for WPF binding, or
                        <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.LocalView%601.ToBindingList" data-throw-if-not-resolved="false"></xref> for WinForms.
                    </p>
    <p>
                        Note that this method calls <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" data-throw-if-not-resolved="false"></xref> unless
                        <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" data-throw-if-not-resolved="false"></xref> has been set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
                    </p>
  remarks: See <a href="https://aka.ms/efcore-docs-local-views">Local views of tracked entities in EF Core</a> for more information.
  example: []
  syntax:
    content: public override LocalView<TEntity> Local { get; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView{{TEntity}}
    content.vb: Public Overrides ReadOnly Property Local As LocalView(Of TEntity)
  overridden: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Local
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.Local*
  nameWithType.vb: DbSetProxy(Of TEntity).Local
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).Local
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.Remove(`0)
  commentId: M:Siesa.SDK.Backend.Access.DbSetProxy`1.Remove(`0)
  id: Remove(`0)
  parent: Siesa.SDK.Backend.Access.DbSetProxy`1
  langs:
  - csharp
  - vb
  name: Remove(TEntity)
  nameWithType: DbSetProxy<TEntity>.Remove(TEntity)
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.Remove(TEntity)
  type: Method
  source:
    remote:
      path: Siesa.SDK.Backend/Access/DbSetProxy.cs
      branch: docFX
      repo: https://gitlab.siesadev.com/conversion/sdk/sdk.git
    id: Remove
    path: ../Siesa.SDK.Backend/Access/DbSetProxy.cs
    startLine: 247
  assemblies:
  - Siesa.SDK.Backend
  namespace: Siesa.SDK.Backend.Access
  summary: >-
    Begins tracking the given entity in the <xref href="Microsoft.EntityFrameworkCore.EntityState.Deleted" data-throw-if-not-resolved="false"></xref> state such that it will

    be removed from the database when <xref href="Microsoft.EntityFrameworkCore.DbContext.SaveChanges" data-throw-if-not-resolved="false"></xref> is called.
  remarks: >-
    <p>
                        If the entity is already tracked in the <xref href="Microsoft.EntityFrameworkCore.EntityState.Added" data-throw-if-not-resolved="false"></xref> state then the context will
                        stop tracking the entity (rather than marking it as <xref href="Microsoft.EntityFrameworkCore.EntityState.Deleted" data-throw-if-not-resolved="false"></xref>) since the
                        entity was previously added to the context and does not exist in the database.
                    </p>
    <p>
                        Any other reachable entities that are not already being tracked will be tracked in the same way that
                        they would be if <xref href="Microsoft.EntityFrameworkCore.DbSet%601.Attach(%600)" data-throw-if-not-resolved="false"></xref> was called before calling this method.
                        This allows any cascading actions to be applied when <xref href="Microsoft.EntityFrameworkCore.DbContext.SaveChanges" data-throw-if-not-resolved="false"></xref> is called.
                    </p>
    <p>
                        Use <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" data-throw-if-not-resolved="false"></xref> to set the state of only a single entity.
                    </p>
    <p>
                        See <a href="https://aka.ms/efcore-docs-change-tracking">EF Core change tracking</a> for more information.
                    </p>
  example: []
  syntax:
    content: public override EntityEntry<TEntity> Remove(TEntity entity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity to remove.
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
      description: >-
        The <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry%601" data-throw-if-not-resolved="false"></xref> for the entity. The entry provides

        access to change tracking information and operations for the entity.
    content.vb: Public Overrides Function Remove(entity As TEntity) As EntityEntry(Of TEntity)
  overridden: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Remove({TEntity})
  overload: Siesa.SDK.Backend.Access.DbSetProxy`1.Remove*
  nameWithType.vb: DbSetProxy(Of TEntity).Remove(TEntity)
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).Remove(TEntity)
references:
- uid: Siesa.SDK.Backend.Access
  commentId: N:Siesa.SDK.Backend.Access
  href: Siesa.html
  name: Siesa.SDK.Backend.Access
  nameWithType: Siesa.SDK.Backend.Access
  fullName: Siesa.SDK.Backend.Access
  spec.csharp:
  - uid: Siesa
    name: Siesa
    href: Siesa.html
  - name: .
  - uid: Siesa.SDK
    name: SDK
    href: Siesa.SDK.html
  - name: .
  - uid: Siesa.SDK.Backend
    name: Backend
    href: Siesa.SDK.Backend.html
  - name: .
  - uid: Siesa.SDK.Backend.Access
    name: Access
    href: Siesa.SDK.Backend.Access.html
  spec.vb:
  - uid: Siesa
    name: Siesa
    href: Siesa.html
  - name: .
  - uid: Siesa.SDK
    name: SDK
    href: Siesa.SDK.html
  - name: .
  - uid: Siesa.SDK.Backend
    name: Backend
    href: Siesa.SDK.Backend.html
  - name: .
  - uid: Siesa.SDK.Backend.Access
    name: Access
    href: Siesa.SDK.Backend.Access.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{`0}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Linq.IQueryable{{TEntity}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  nameWithType.vb: IQueryable(Of TEntity)
  fullName.vb: System.Linq.IQueryable(Of TEntity)
  name.vb: IQueryable(Of TEntity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
- uid: System.ComponentModel.IListSource
  commentId: T:System.ComponentModel.IListSource
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.ilistsource
  name: IListSource
  nameWithType: IListSource
  fullName: System.ComponentModel.IListSource
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IAsyncEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<TEntity>
  nameWithType: IAsyncEnumerable<TEntity>
  fullName: System.Collections.Generic.IAsyncEnumerable<TEntity>
  nameWithType.vb: IAsyncEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of TEntity)
  name.vb: IAsyncEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AsAsyncEnumerable
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AsAsyncEnumerable
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AsAsyncEnumerable
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.asasyncenumerable#microsoft-entityframeworkcore-dbset((-0))-asasyncenumerable
  name: AsAsyncEnumerable()
  nameWithType: DbSet<TEntity>.AsAsyncEnumerable()
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AsAsyncEnumerable()
  nameWithType.vb: DbSet(Of TEntity).AsAsyncEnumerable()
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AsAsyncEnumerable()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AsAsyncEnumerable
    name: AsAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.asasyncenumerable#microsoft-entityframeworkcore-dbset((-0))-asasyncenumerable
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AsAsyncEnumerable
    name: AsAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.asasyncenumerable#microsoft-entityframeworkcore-dbset((-0))-asasyncenumerable
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AsQueryable
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AsQueryable
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AsQueryable
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.asqueryable#microsoft-entityframeworkcore-dbset((-0))-asqueryable
  name: AsQueryable()
  nameWithType: DbSet<TEntity>.AsQueryable()
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AsQueryable()
  nameWithType.vb: DbSet(Of TEntity).AsQueryable()
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AsQueryable()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AsQueryable
    name: AsQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.asqueryable#microsoft-entityframeworkcore-dbset((-0))-asqueryable
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AsQueryable
    name: AsQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.asqueryable#microsoft-entityframeworkcore-dbset((-0))-asqueryable
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Add({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.Add(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.add#microsoft-entityframeworkcore-dbset((-0))-add(-0)
  name: Add(TEntity)
  nameWithType: DbSet<TEntity>.Add(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Add(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Add(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Add(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.add#microsoft-entityframeworkcore-dbset((-0))-add(-0)
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.add#microsoft-entityframeworkcore-dbset((-0))-add(-0)
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddAsync({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AddAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addasync#microsoft-entityframeworkcore-dbset((-0))-addasync(-0-system-threading-cancellationtoken)
  name: AddAsync(TEntity, CancellationToken)
  nameWithType: DbSet<TEntity>.AddAsync(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddAsync(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).AddAsync(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddAsync(TEntity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddAsync(`0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addasync#microsoft-entityframeworkcore-dbset((-0))-addasync(-0-system-threading-cancellationtoken)
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddAsync(`0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addasync#microsoft-entityframeworkcore-dbset((-0))-addasync(-0-system-threading-cancellationtoken)
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Attach({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.Attach(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attach#microsoft-entityframeworkcore-dbset((-0))-attach(-0)
  name: Attach(TEntity)
  nameWithType: DbSet<TEntity>.Attach(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Attach(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Attach(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Attach(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Attach(`0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attach#microsoft-entityframeworkcore-dbset((-0))-attach(-0)
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Attach(`0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attach#microsoft-entityframeworkcore-dbset((-0))-attach(-0)
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Update({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.Update(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.update#microsoft-entityframeworkcore-dbset((-0))-update(-0)
  name: Update(TEntity)
  nameWithType: DbSet<TEntity>.Update(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Update(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Update(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Update(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Update(`0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.update#microsoft-entityframeworkcore-dbset((-0))-update(-0)
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Update(`0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.update#microsoft-entityframeworkcore-dbset((-0))-update(-0)
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRange({TEntity}[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AddRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrange#microsoft-entityframeworkcore-dbset((-0))-addrange(-0())
  name: AddRange(params TEntity[])
  nameWithType: DbSet<TEntity>.AddRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AddRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange(ParamArray TEntity())
  name.vb: AddRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRange(`0[])
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrange#microsoft-entityframeworkcore-dbset((-0))-addrange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRange(`0[])
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrange#microsoft-entityframeworkcore-dbset((-0))-addrange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRangeAsync({TEntity}[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AddRangeAsync(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrangeasync#microsoft-entityframeworkcore-dbset((-0))-addrangeasync(-0())
  name: AddRangeAsync(params TEntity[])
  nameWithType: DbSet<TEntity>.AddRangeAsync(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync(ParamArray TEntity())
  name.vb: AddRangeAsync(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRangeAsync(`0[])
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrangeasync#microsoft-entityframeworkcore-dbset((-0))-addrangeasync(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRangeAsync(`0[])
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrangeasync#microsoft-entityframeworkcore-dbset((-0))-addrangeasync(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AttachRange({TEntity}[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AttachRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attachrange#microsoft-entityframeworkcore-dbset((-0))-attachrange(-0())
  name: AttachRange(params TEntity[])
  nameWithType: DbSet<TEntity>.AttachRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AttachRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(ParamArray TEntity())
  name.vb: AttachRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AttachRange(`0[])
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attachrange#microsoft-entityframeworkcore-dbset((-0))-attachrange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AttachRange(`0[])
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attachrange#microsoft-entityframeworkcore-dbset((-0))-attachrange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.RemoveRange({TEntity}[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.RemoveRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.removerange#microsoft-entityframeworkcore-dbset((-0))-removerange(-0())
  name: RemoveRange(params TEntity[])
  nameWithType: DbSet<TEntity>.RemoveRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).RemoveRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange(ParamArray TEntity())
  name.vb: RemoveRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.RemoveRange(`0[])
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.removerange#microsoft-entityframeworkcore-dbset((-0))-removerange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.RemoveRange(`0[])
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.removerange#microsoft-entityframeworkcore-dbset((-0))-removerange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.UpdateRange({TEntity}[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.UpdateRange(`0[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.updaterange#microsoft-entityframeworkcore-dbset((-0))-updaterange(-0())
  name: UpdateRange(params TEntity[])
  nameWithType: DbSet<TEntity>.UpdateRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).UpdateRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange(ParamArray TEntity())
  name.vb: UpdateRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.UpdateRange(`0[])
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.updaterange#microsoft-entityframeworkcore-dbset((-0))-updaterange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.UpdateRange(`0[])
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.updaterange#microsoft-entityframeworkcore-dbset((-0))-updaterange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRange(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrange#microsoft-entityframeworkcore-dbset((-0))-addrange(system-collections-generic-ienumerable((-0)))
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).AddRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AddRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrange#microsoft-entityframeworkcore-dbset((-0))-addrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrange#microsoft-entityframeworkcore-dbset((-0))-addrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AddRangeAsync(System.Collections.Generic.IEnumerable{{TEntity}},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrangeasync#microsoft-entityframeworkcore-dbset((-0))-addrangeasync(system-collections-generic-ienumerable((-0))-system-threading-cancellationtoken)
  name: AddRangeAsync(IEnumerable<TEntity>, CancellationToken)
  nameWithType: DbSet<TEntity>.AddRangeAsync(IEnumerable<TEntity>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync(IEnumerable(Of TEntity), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrangeasync#microsoft-entityframeworkcore-dbset((-0))-addrangeasync(system-collections-generic-ienumerable((-0))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.addrangeasync#microsoft-entityframeworkcore-dbset((-0))-addrangeasync(system-collections-generic-ienumerable((-0))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.AttachRange(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.AttachRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attachrange#microsoft-entityframeworkcore-dbset((-0))-attachrange(system-collections-generic-ienumerable((-0)))
  name: AttachRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AttachRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).AttachRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AttachRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AttachRange(System.Collections.Generic.IEnumerable{`0})
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attachrange#microsoft-entityframeworkcore-dbset((-0))-attachrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.AttachRange(System.Collections.Generic.IEnumerable{`0})
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.attachrange#microsoft-entityframeworkcore-dbset((-0))-attachrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.RemoveRange(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.removerange#microsoft-entityframeworkcore-dbset((-0))-removerange(system-collections-generic-ienumerable((-0)))
  name: RemoveRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.RemoveRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).RemoveRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: RemoveRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.removerange#microsoft-entityframeworkcore-dbset((-0))-removerange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.removerange#microsoft-entityframeworkcore-dbset((-0))-removerange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.UpdateRange(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.updaterange#microsoft-entityframeworkcore-dbset((-0))-updaterange(system-collections-generic-ienumerable((-0)))
  name: UpdateRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.UpdateRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).UpdateRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: UpdateRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.UpdateRange(System.Collections.Generic.IEnumerable{`0})
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.updaterange#microsoft-entityframeworkcore-dbset((-0))-updaterange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.UpdateRange(System.Collections.Generic.IEnumerable{`0})
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.updaterange#microsoft-entityframeworkcore-dbset((-0))-updaterange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.getasyncenumerator#microsoft-entityframeworkcore-dbset((-0))-getasyncenumerator(system-threading-cancellationtoken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: DbSet<TEntity>.GetAsyncEnumerator(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).GetAsyncEnumerator(CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.getasyncenumerator#microsoft-entityframeworkcore-dbset((-0))-getasyncenumerator(system-threading-cancellationtoken)
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.getasyncenumerator#microsoft-entityframeworkcore-dbset((-0))-getasyncenumerator(system-threading-cancellationtoken)
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Linq.IQueryable.Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  parent: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension
  definition: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html#Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  name: LeftJoin(IQueryable, IQueryable, string, string, List<string>, List<string>)
  nameWithType: LeftJoinExtension.LeftJoin(IQueryable, IQueryable, string, string, List<string>, List<string>)
  fullName: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable, System.Linq.IQueryable, string, string, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>)
  nameWithType.vb: LeftJoinExtension.LeftJoin(IQueryable, IQueryable, String, String, List(Of String), List(Of String))
  fullName.vb: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable, System.Linq.IQueryable, String, String, System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of String))
  name.vb: LeftJoin(IQueryable, IQueryable, String, String, List(Of String), List(Of String))
  spec.csharp:
  - uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
    name: LeftJoin
    href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html#Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - name: (
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
    name: LeftJoin
    href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html#Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - name: (
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Infrastructure
    name: Infrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Infrastructure
    name: Infrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AsAsyncEnumerable
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AsAsyncEnumerable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.asasyncenumerable
  name: AsAsyncEnumerable()
  nameWithType: DbSet<TEntity>.AsAsyncEnumerable()
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AsAsyncEnumerable()
  nameWithType.vb: DbSet(Of TEntity).AsAsyncEnumerable()
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AsAsyncEnumerable()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AsAsyncEnumerable
    name: AsAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.asasyncenumerable
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AsAsyncEnumerable
    name: AsAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.asasyncenumerable
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AsQueryable
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AsQueryable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.asqueryable
  name: AsQueryable()
  nameWithType: DbSet<TEntity>.AsQueryable()
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AsQueryable()
  nameWithType.vb: DbSet(Of TEntity).AsQueryable()
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AsQueryable()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AsQueryable
    name: AsQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.asqueryable
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AsQueryable
    name: AsQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.asqueryable
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.add
  name: Add(TEntity)
  nameWithType: DbSet<TEntity>.Add(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Add(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Add(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Add(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.add
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.add
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addasync
  name: AddAsync(TEntity, CancellationToken)
  nameWithType: DbSet<TEntity>.AddAsync(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddAsync(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).AddAsync(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddAsync(TEntity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addasync
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addasync
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attach
  name: Attach(TEntity)
  nameWithType: DbSet<TEntity>.Attach(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Attach(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Attach(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Attach(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attach
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attach
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.update
  name: Update(TEntity)
  nameWithType: DbSet<TEntity>.Update(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Update(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Update(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Update(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.update
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.update
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrange#microsoft-entityframeworkcore-dbset-1-addrange(-0())
  name: AddRange(params TEntity[])
  nameWithType: DbSet<TEntity>.AddRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AddRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange(ParamArray TEntity())
  name.vb: AddRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrange#microsoft-entityframeworkcore-dbset-1-addrange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrange#microsoft-entityframeworkcore-dbset-1-addrange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrangeasync#microsoft-entityframeworkcore-dbset-1-addrangeasync(-0())
  name: AddRangeAsync(params TEntity[])
  nameWithType: DbSet<TEntity>.AddRangeAsync(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync(ParamArray TEntity())
  name.vb: AddRangeAsync(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrangeasync#microsoft-entityframeworkcore-dbset-1-addrangeasync(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrangeasync#microsoft-entityframeworkcore-dbset-1-addrangeasync(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attachrange#microsoft-entityframeworkcore-dbset-1-attachrange(-0())
  name: AttachRange(params TEntity[])
  nameWithType: DbSet<TEntity>.AttachRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).AttachRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(ParamArray TEntity())
  name.vb: AttachRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attachrange#microsoft-entityframeworkcore-dbset-1-attachrange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attachrange#microsoft-entityframeworkcore-dbset-1-attachrange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.removerange#microsoft-entityframeworkcore-dbset-1-removerange(-0())
  name: RemoveRange(params TEntity[])
  nameWithType: DbSet<TEntity>.RemoveRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).RemoveRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange(ParamArray TEntity())
  name.vb: RemoveRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.removerange#microsoft-entityframeworkcore-dbset-1-removerange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.removerange#microsoft-entityframeworkcore-dbset-1-removerange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.updaterange#microsoft-entityframeworkcore-dbset-1-updaterange(-0())
  name: UpdateRange(params TEntity[])
  nameWithType: DbSet<TEntity>.UpdateRange(params TEntity[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange(params TEntity[])
  nameWithType.vb: DbSet(Of TEntity).UpdateRange(ParamArray TEntity())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange(ParamArray TEntity())
  name.vb: UpdateRange(ParamArray TEntity())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.updaterange#microsoft-entityframeworkcore-dbset-1-updaterange(-0())
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.updaterange#microsoft-entityframeworkcore-dbset-1-updaterange(-0())
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrange#microsoft-entityframeworkcore-dbset-1-addrange(system-collections-generic-ienumerable((-0)))
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).AddRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AddRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrange#microsoft-entityframeworkcore-dbset-1-addrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrange#microsoft-entityframeworkcore-dbset-1-addrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrangeasync#microsoft-entityframeworkcore-dbset-1-addrangeasync(system-collections-generic-ienumerable((-0))-system-threading-cancellationtoken)
  name: AddRangeAsync(IEnumerable<TEntity>, CancellationToken)
  nameWithType: DbSet<TEntity>.AddRangeAsync(IEnumerable<TEntity>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AddRangeAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).AddRangeAsync(IEnumerable(Of TEntity), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AddRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrangeasync#microsoft-entityframeworkcore-dbset-1-addrangeasync(system-collections-generic-ienumerable((-0))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.addrangeasync#microsoft-entityframeworkcore-dbset-1-addrangeasync(system-collections-generic-ienumerable((-0))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attachrange#microsoft-entityframeworkcore-dbset-1-attachrange(system-collections-generic-ienumerable((-0)))
  name: AttachRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.AttachRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.AttachRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).AttachRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).AttachRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AttachRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attachrange#microsoft-entityframeworkcore-dbset-1-attachrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.attachrange#microsoft-entityframeworkcore-dbset-1-attachrange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.removerange#microsoft-entityframeworkcore-dbset-1-removerange(system-collections-generic-ienumerable((-0)))
  name: RemoveRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.RemoveRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.RemoveRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).RemoveRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).RemoveRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: RemoveRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.removerange#microsoft-entityframeworkcore-dbset-1-removerange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.removerange#microsoft-entityframeworkcore-dbset-1-removerange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.updaterange#microsoft-entityframeworkcore-dbset-1-updaterange(system-collections-generic-ienumerable((-0)))
  name: UpdateRange(IEnumerable<TEntity>)
  nameWithType: DbSet<TEntity>.UpdateRange(IEnumerable<TEntity>)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.UpdateRange(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: DbSet(Of TEntity).UpdateRange(IEnumerable(Of TEntity))
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).UpdateRange(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: UpdateRange(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.updaterange#microsoft-entityframeworkcore-dbset-1-updaterange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.updaterange#microsoft-entityframeworkcore-dbset-1-updaterange(system-collections-generic-ienumerable((-0)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.getasyncenumerator
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: DbSet<TEntity>.GetAsyncEnumerator(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).GetAsyncEnumerator(CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.getasyncenumerator
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.getasyncenumerator
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  isExternal: true
  href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html#Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  name: LeftJoin(IQueryable, IQueryable, string, string, List<string>, List<string>)
  nameWithType: LeftJoinExtension.LeftJoin(IQueryable, IQueryable, string, string, List<string>, List<string>)
  fullName: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable, System.Linq.IQueryable, string, string, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>)
  nameWithType.vb: LeftJoinExtension.LeftJoin(IQueryable, IQueryable, String, String, List(Of String), List(Of String))
  fullName.vb: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable, System.Linq.IQueryable, String, String, System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of String))
  name.vb: LeftJoin(IQueryable, IQueryable, String, String, List(Of String), List(Of String))
  spec.csharp:
  - uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
    name: LeftJoin
    href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html#Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - name: (
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
    name: LeftJoin
    href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html#Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.LeftJoin(System.Linq.IQueryable,System.Linq.IQueryable,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - name: (
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.Linq.IQueryable
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension
  commentId: T:Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension
  parent: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
  href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension.html
  name: LeftJoinExtension
  nameWithType: LeftJoinExtension
  fullName: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.LeftJoinExtension
- uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
  commentId: N:Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
  href: Siesa.html
  name: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
  nameWithType: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
  fullName: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
  spec.csharp:
  - uid: Siesa
    name: Siesa
    href: Siesa.html
  - name: .
  - uid: Siesa.SDK
    name: SDK
    href: Siesa.SDK.html
  - name: .
  - uid: Siesa.SDK.Backend
    name: Backend
    href: Siesa.SDK.Backend.html
  - name: .
  - uid: Siesa.SDK.Backend.LinqHelper
    name: LinqHelper
    href: Siesa.SDK.Backend.LinqHelper.html
  - name: .
  - uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
    name: DynamicLinqHelper
    href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.html
  spec.vb:
  - uid: Siesa
    name: Siesa
    href: Siesa.html
  - name: .
  - uid: Siesa.SDK
    name: SDK
    href: Siesa.SDK.html
  - name: .
  - uid: Siesa.SDK.Backend
    name: Backend
    href: Siesa.SDK.Backend.html
  - name: .
  - uid: Siesa.SDK.Backend.LinqHelper
    name: LinqHelper
    href: Siesa.SDK.Backend.LinqHelper.html
  - name: .
  - uid: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper
    name: DynamicLinqHelper
    href: Siesa.SDK.Backend.LinqHelper.DynamicLinqHelper.html
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.ientitytype
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.EntityType
  commentId: P:Microsoft.EntityFrameworkCore.DbSet{`0}.EntityType
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.EntityType
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.entitytype
  name: EntityType
  nameWithType: DbSet<TEntity>.EntityType
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.EntityType
  nameWithType.vb: DbSet(Of TEntity).EntityType
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).EntityType
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType*
  commentId: Overload:Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType
  href: Siesa.SDK.Backend.Access.DbSetProxy-1.html#Siesa.SDK.Backend.Access.DbSetProxy`1.EntityType
  name: EntityType
  nameWithType: DbSetProxy<TEntity>.EntityType
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.EntityType
  nameWithType.vb: DbSetProxy(Of TEntity).EntityType
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).EntityType
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Metadata
    name: Metadata
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Metadata
    name: Metadata
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata
- uid: Microsoft.EntityFrameworkCore.DbSet`1.EntityType
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.EntityType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.entitytype
  name: EntityType
  nameWithType: DbSet<TEntity>.EntityType
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.EntityType
  nameWithType.vb: DbSet(Of TEntity).EntityType
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).EntityType
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor*
  commentId: Overload:Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor
  href: Siesa.SDK.Backend.Access.DbSetProxy-1.html#Siesa.SDK.Backend.Access.DbSetProxy`1.#ctor(Siesa.SDK.Shared.Services.IAuthenticationService,Siesa.SDK.Backend.Access.SDKContext,Microsoft.EntityFrameworkCore.DbSet{`0})
  name: DbSetProxy
  nameWithType: DbSetProxy<TEntity>.DbSetProxy
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.DbSetProxy
  nameWithType.vb: DbSetProxy(Of TEntity).New
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).New
  name.vb: New
- uid: Siesa.SDK.Shared.Services.IAuthenticationService
  commentId: T:Siesa.SDK.Shared.Services.IAuthenticationService
  parent: Siesa.SDK.Shared.Services
  name: IAuthenticationService
  nameWithType: IAuthenticationService
  fullName: Siesa.SDK.Shared.Services.IAuthenticationService
- uid: Siesa.SDK.Backend.Access.SDKContext
  commentId: T:Siesa.SDK.Backend.Access.SDKContext
  parent: Siesa.SDK.Backend.Access
  href: Siesa.SDK.Backend.Access.SDKContext.html
  name: SDKContext
  nameWithType: SDKContext
  fullName: Siesa.SDK.Backend.Access.SDKContext
- uid: Siesa.SDK.Shared.Services
  commentId: N:Siesa.SDK.Shared.Services
  name: Siesa.SDK.Shared.Services
  nameWithType: Siesa.SDK.Shared.Services
  fullName: Siesa.SDK.Shared.Services
  spec.csharp:
  - uid: Siesa
    name: Siesa
  - name: .
  - uid: Siesa.SDK
    name: SDK
  - name: .
  - uid: Siesa.SDK.Shared
    name: Shared
  - name: .
  - uid: Siesa.SDK.Shared.Services
    name: Services
  spec.vb:
  - uid: Siesa
    name: Siesa
  - name: .
  - uid: Siesa.SDK
    name: SDK
  - name: .
  - uid: Siesa.SDK.Shared
    name: Shared
  - name: .
  - uid: Siesa.SDK.Shared.Services
    name: Services
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.find#microsoft-entityframeworkcore-dbset((-0))-find(system-object())
  name: Find(params object[])
  nameWithType: DbSet<TEntity>.Find(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Find(params object[])
  nameWithType.vb: DbSet(Of TEntity).Find(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Find(ParamArray Object())
  name.vb: Find(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Find(System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.find#microsoft-entityframeworkcore-dbset((-0))-find(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Find(System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.find#microsoft-entityframeworkcore-dbset((-0))-find(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.Find*
  commentId: Overload:Siesa.SDK.Backend.Access.DbSetProxy`1.Find
  href: Siesa.SDK.Backend.Access.DbSetProxy-1.html#Siesa.SDK.Backend.Access.DbSetProxy`1.Find(System.Object[])
  name: Find
  nameWithType: DbSetProxy<TEntity>.Find
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.Find
  nameWithType.vb: DbSetProxy(Of TEntity).Find
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).Find
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.find
  name: Find(params object[])
  nameWithType: DbSet<TEntity>.Find(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Find(params object[])
  nameWithType.vb: DbSet(Of TEntity).Find(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Find(ParamArray Object())
  name.vb: Find(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.find
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.find
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.FindAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.FindAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.findasync#microsoft-entityframeworkcore-dbset((-0))-findasync(system-object())
  name: FindAsync(params object[])
  nameWithType: DbSet<TEntity>.FindAsync(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync(params object[])
  nameWithType.vb: DbSet(Of TEntity).FindAsync(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync(ParamArray Object())
  name.vb: FindAsync(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.FindAsync(System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.findasync#microsoft-entityframeworkcore-dbset((-0))-findasync(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.FindAsync(System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.findasync#microsoft-entityframeworkcore-dbset((-0))-findasync(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync*
  commentId: Overload:Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync
  href: Siesa.SDK.Backend.Access.DbSetProxy-1.html#Siesa.SDK.Backend.Access.DbSetProxy`1.FindAsync(System.Object[])
  name: FindAsync
  nameWithType: DbSetProxy<TEntity>.FindAsync
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.FindAsync
  nameWithType.vb: DbSetProxy(Of TEntity).FindAsync
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).FindAsync
- uid: System.Threading.Tasks.ValueTask{{TEntity}}
  commentId: T:System.Threading.Tasks.ValueTask{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TEntity>
  nameWithType: ValueTask<TEntity>
  fullName: System.Threading.Tasks.ValueTask<TEntity>
  nameWithType.vb: ValueTask(Of TEntity)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TEntity)
  name.vb: ValueTask(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.findasync#microsoft-entityframeworkcore-dbset-1-findasync(system-object())
  name: FindAsync(params object[])
  nameWithType: DbSet<TEntity>.FindAsync(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync(params object[])
  nameWithType.vb: DbSet(Of TEntity).FindAsync(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync(ParamArray Object())
  name.vb: FindAsync(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.findasync#microsoft-entityframeworkcore-dbset-1-findasync(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.findasync#microsoft-entityframeworkcore-dbset-1-findasync(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.operationcanceledexception
  name: OperationCanceledException
  nameWithType: OperationCanceledException
  fullName: System.OperationCanceledException
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.findasync#microsoft-entityframeworkcore-dbset((-0))-findasync(system-object()-system-threading-cancellationtoken)
  name: FindAsync(object[], CancellationToken)
  nameWithType: DbSet<TEntity>.FindAsync(object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync(object[], System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).FindAsync(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync(Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.findasync#microsoft-entityframeworkcore-dbset((-0))-findasync(system-object()-system-threading-cancellationtoken)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.findasync#microsoft-entityframeworkcore-dbset((-0))-findasync(system-object()-system-threading-cancellationtoken)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.findasync#microsoft-entityframeworkcore-dbset-1-findasync(system-object()-system-threading-cancellationtoken)
  name: FindAsync(object[], CancellationToken)
  nameWithType: DbSet<TEntity>.FindAsync(object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.FindAsync(object[], System.Threading.CancellationToken)
  nameWithType.vb: DbSet(Of TEntity).FindAsync(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).FindAsync(Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.findasync#microsoft-entityframeworkcore-dbset-1-findasync(system-object()-system-threading-cancellationtoken)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.findasync#microsoft-entityframeworkcore-dbset-1-findasync(system-object()-system-threading-cancellationtoken)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1
  name: LocalView<TEntity>
  nameWithType: LocalView<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView<TEntity>
  nameWithType.vb: LocalView(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView(Of TEntity)
  name.vb: LocalView(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.entityframeworkqueryableextensions.load
  name: Load<TSource>(IQueryable<TSource>)
  nameWithType: EntityFrameworkQueryableExtensions.Load<TSource>(IQueryable<TSource>)
  fullName: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load<TSource>(System.Linq.IQueryable<TSource>)
  nameWithType.vb: EntityFrameworkQueryableExtensions.Load(Of TSource)(IQueryable(Of TSource))
  fullName.vb: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load(Of TSource)(System.Linq.IQueryable(Of TSource))
  name.vb: Load(Of TSource)(IQueryable(Of TSource))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
    name: Load
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.entityframeworkqueryableextensions.load
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})
    name: Load
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.entityframeworkqueryableextensions.load
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToObservableCollection
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToObservableCollection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1.toobservablecollection
  name: ToObservableCollection()
  nameWithType: LocalView<TEntity>.ToObservableCollection()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView<TEntity>.ToObservableCollection()
  nameWithType.vb: LocalView(Of TEntity).ToObservableCollection()
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView(Of TEntity).ToObservableCollection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToObservableCollection
    name: ToObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1.toobservablecollection
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToObservableCollection
    name: ToObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1.toobservablecollection
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToBindingList
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToBindingList
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1.tobindinglist
  name: ToBindingList()
  nameWithType: LocalView<TEntity>.ToBindingList()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView<TEntity>.ToBindingList()
  nameWithType.vb: LocalView(Of TEntity).ToBindingList()
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView(Of TEntity).ToBindingList()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToBindingList
    name: ToBindingList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1.tobindinglist
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToBindingList
    name: ToBindingList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1.tobindinglist
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.changetracker.detectchanges
  name: DetectChanges()
  nameWithType: ChangeTracker.DetectChanges()
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
    name: DetectChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.changetracker.detectchanges
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
    name: DetectChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.changetracker.detectchanges
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.changetracker.autodetectchangesenabled
  name: AutoDetectChangesEnabled
  nameWithType: ChangeTracker.AutoDetectChangesEnabled
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Local
  commentId: P:Microsoft.EntityFrameworkCore.DbSet{`0}.Local
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.Local
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.local
  name: Local
  nameWithType: DbSet<TEntity>.Local
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Local
  nameWithType.vb: DbSet(Of TEntity).Local
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Local
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.Local*
  commentId: Overload:Siesa.SDK.Backend.Access.DbSetProxy`1.Local
  href: Siesa.SDK.Backend.Access.DbSetProxy-1.html#Siesa.SDK.Backend.Access.DbSetProxy`1.Local
  name: Local
  nameWithType: DbSetProxy<TEntity>.Local
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.Local
  nameWithType.vb: DbSetProxy(Of TEntity).Local
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).Local
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1
  name: LocalView<TEntity>
  nameWithType: LocalView<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView<TEntity>
  nameWithType.vb: LocalView(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView(Of TEntity)
  name.vb: LocalView(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1
    name: LocalView
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.localview-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Local
  commentId: P:Microsoft.EntityFrameworkCore.DbSet`1.Local
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.local
  name: Local
  nameWithType: DbSet<TEntity>.Local
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Local
  nameWithType.vb: DbSet(Of TEntity).Local
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Local
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking
    name: ChangeTracking
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking
    name: ChangeTracking
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking
- uid: Microsoft.EntityFrameworkCore.EntityState.Deleted
  commentId: F:Microsoft.EntityFrameworkCore.EntityState.Deleted
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.entitystate#microsoft-entityframeworkcore-entitystate-deleted
  name: Deleted
  nameWithType: EntityState.Deleted
  fullName: Microsoft.EntityFrameworkCore.EntityState.Deleted
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.EntityState.Added
  commentId: F:Microsoft.EntityFrameworkCore.EntityState.Added
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.entitystate#microsoft-entityframeworkcore-entitystate-added
  name: Added
  nameWithType: EntityState.Added
  fullName: Microsoft.EntityFrameworkCore.EntityState.Added
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  commentId: P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry.state
  name: State
  nameWithType: EntityEntry.State
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry-1
  name: EntityEntry<TEntity>
  nameWithType: EntityEntry<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>
  nameWithType.vb: EntityEntry(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity)
  name.vb: EntityEntry(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}.Remove({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbSet{`0}.Remove(`0)
  parent: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.remove#microsoft-entityframeworkcore-dbset((-0))-remove(-0)
  name: Remove(TEntity)
  nameWithType: DbSet<TEntity>.Remove(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Remove(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Remove(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Remove(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.remove#microsoft-entityframeworkcore-dbset((-0))-remove(-0)
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset--0-.remove#microsoft-entityframeworkcore-dbset((-0))-remove(-0)
  - name: (
  - name: TEntity
  - name: )
- uid: Siesa.SDK.Backend.Access.DbSetProxy`1.Remove*
  commentId: Overload:Siesa.SDK.Backend.Access.DbSetProxy`1.Remove
  href: Siesa.SDK.Backend.Access.DbSetProxy-1.html#Siesa.SDK.Backend.Access.DbSetProxy`1.Remove(`0)
  name: Remove
  nameWithType: DbSetProxy<TEntity>.Remove
  fullName: Siesa.SDK.Backend.Access.DbSetProxy<TEntity>.Remove
  nameWithType.vb: DbSetProxy(Of TEntity).Remove
  fullName.vb: Siesa.SDK.Backend.Access.DbSetProxy(Of TEntity).Remove
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry-1
  name: EntityEntry<TEntity>
  nameWithType: EntityEntry<TEntity>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>
  nameWithType.vb: EntityEntry(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry(Of TEntity)
  name.vb: EntityEntry(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1
    name: EntityEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.changetracking.entityentry-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
  commentId: M:Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.remove
  name: Remove(TEntity)
  nameWithType: DbSet<TEntity>.Remove(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>.Remove(TEntity)
  nameWithType.vb: DbSet(Of TEntity).Remove(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity).Remove(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.remove
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1.remove
  - name: (
  - name: TEntity
  - name: )
