@using SDK.Components.Visualization
@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.FormManager.Fields
@using Siesa.SDK.Frontend.Components.Visualization
@inherits Siesa.SDK.Frontend.Components.FormManager.ViewModels.FormView
@if (Loading == true)
{
    <ResourceViewer ResourceTag="Custom.Generic.Loading" />
}else if (Panels == null || Panels.Count <= 0)
{
    <ResourceViewer ResourceTag="Module.SDK.ViewdefNotFound" />
}
else if (BusinessObj != null)
{
    <CascadingValue Value="@this">
        <EditForm id="@FormID" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit"
        EditContext="@EditFormContext">
            <ObjectGraphDataAnnotationsValidator />
            <DxFormLayout CaptionPosition="CaptionPosition.Vertical">
                @if (Panels.Count > 1)
            {
                <DxFormLayoutTabPages ScrollMode="TabsScrollMode.Auto">
                    @foreach (var panel in Panels)
                    {
                        <SDKFormLayoutTabPage ResourceTag="@panel.ResourceTag" @key="@panel.PanelId">
                            <CascadingValue Value="@EditFormContext">
                                <FieldsContainer Fields="@panel.Fields" SubViewdef="@panel.SubViewdef"
                            DefaultColSize="@panel.ColSize" ModelObj="@BusinessObj" />
                            </CascadingValue>
                        </SDKFormLayoutTabPage>
                    }


                </DxFormLayoutTabPages>

            }
            else
            {
                <CascadingValue Value="@EditFormContext">
                    <FieldsContainer Fields="@Panels[0].Fields" SubViewdef="@Panels[0].SubViewdef"
                    DefaultColSize="@Panels[0].ColSize" ModelObj="@BusinessObj" />
                </CascadingValue>

            }
        </DxFormLayout>
        @* <ValidationSummary /> *@
        @if(!string.IsNullOrEmpty(ErrorMsg))
        {
            <label>@((MarkupString)ErrorMsg)</label>
        }
    </EditForm>
</CascadingValue>
@if(this.SetTopBar)
{

    <SetTopBar>
        <TopBarTitle>@Title</TopBarTitle>
        <TopBarButtons>
            @foreach (var btn in FormViewModel.Buttons)
            {
                <TopBarButton Click="@(()=> { OnClickCustomButton(@btn); })" ResourceTag="@btn.ResourceTag" IconCssClass="@btn.IconClass" />
            }
        </TopBarButtons>
    </SetTopBar>
}

}
