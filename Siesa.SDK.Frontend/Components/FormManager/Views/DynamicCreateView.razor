@page "/{BusinessName}/create/"
@page "/{BusinessName}/create/{DuplicateRowid}/"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@inherits Siesa.SDK.Frontend.Components.FormManager.ViewModels.DynamicBaseViewModel
@if (ErrorMsg != null && ErrorMsg != "")
{
    <text>@ErrorMsg</text>
}
else if (BusinessObj == null)
{
    <text>Loading...</text>
}
else if (BusinessObj != null)
{
    <DynamicComponent Type="@(typeof(Views.CreateView))" Parameters="@parameters" />
}

@code {
    [Parameter] public Dictionary<string, object> DefaultFields { get; set; }
    [Parameter] public string DuplicateRowid { get; set; }

    private async Task GetDuplicateInfo(Int64 duplicateRowid){
        try
        {
            await BusinessObj.GetDuplicateInfo(duplicateRowid);
        }
        catch (System.Exception e)
        {
            Console.WriteLine("Error EditViewModel", e.ToString());
            //ErrorMsg = e.ToString();
        }
    }

    protected override void OnInitialized()
    {
        ViewType = ViewModels.DynamicViewType.Create;
        base.OnInitialized();
        if (DefaultFields != null)
        {
            foreach (var item in DefaultFields)
            {
                BusinessObj.SetPropertyValue(item.Key, item.Value);
            }
        }

        //BusinessObj.OnReady();
    }

    protected override void SetParameters(dynamic businessObj, string businessName){
        parameters.Clear();
        parameters.Add("BusinessObj", businessObj);
        parameters.Add("BusinessName", businessName);
        parameters.Add("IsSubpanel", IsSubpanel);
        if (IsSubpanel)
        {
            parameters.Add("SetTopBar", false);
            parameters.Add("ViewdefName", "related_create");
        }
    }

    public override async Task SetParametersAsync(ParameterView parameters)
        {
            var originalDuplicateRowid = DuplicateRowid;
            var originalBusinessName = BusinessName;
            await base.SetParametersAsync(parameters);
            try
            {
                if (parameters.TryGetValue<string>(nameof(DuplicateRowid), out var value))
                {
                    if (value != null && (value != originalDuplicateRowid || originalBusinessName != BusinessName))
                    {
                        //BusinessObj = null;
                        ErrorMsg = "";

                        await GetDuplicateInfo(Convert.ToInt64(value));
                        StateHasChanged();
                    }

                }
            }
            catch (Exception e)
            {

            }
        }


}