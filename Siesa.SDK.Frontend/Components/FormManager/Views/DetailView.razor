@using SDK.Components.Visualization
@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.FormManager.Fields
@using Siesa.SDK.Frontend.Components.Layout.Detail.Relationship
@using Siesa.SDK.Frontend.Components.Visualization
@if (Panels == null || Panels.Count <= 0)
{
    <ResourceViewer ResourceTag="SDK.ViewdefNotFound" />
}
else if (ModelLoaded == true)
{
        @if(IsSubpanel){
            <h5>@BusinessObj</h5>
            <hr />
        }
        <DxFormLayout CaptionPosition="CaptionPosition.Vertical">

            @if (Panels.Count > 1)
            {
                <DxFormLayoutTabPages>
                    @foreach (var panel in Panels)
                    {
                        <SDKFormLayoutTabPage ResourceTag="@panel.ResourceTag">
                            <FieldsContainer Fields="@panel.Fields" SubViewdef="@panel.SubViewdef" ModelObj="@BusinessObj" DefaultColSize="@panel.ColSize" />
                        </SDKFormLayoutTabPage>
                    }
                </DxFormLayoutTabPages>

            }
            else
            {
                <FieldsContainer Fields="@Panels[0].Fields" SubViewdef="@Panels[0].SubViewdef" ModelObj="@BusinessObj" DefaultColSize="@Panels[0].ColSize"/>

            }
        </DxFormLayout>
        <label>@((MarkupString)ErrorMsg)</label>
         @foreach (var rel in FormViewModel.Relationships)
            {
               <RelationshipPanel Relationship="@rel" Parent="@BusinessObj.BaseObj" />
            }
    @if(IsSubpanel){
        <div class="buttons-container">
            @foreach (var btn in FormViewModel.Buttons)
            {
                <SDKButton RenderStyle="@btn.RenderStyle" RenderStyleMode="SDKButtonRenderStyleMode.Text" Click="@(()=> { OnClickCustomButton(@btn); })" ResourceTag="@btn.ResourceTag" />
            }
            <SDKButton RenderStyle="SDKButtonRenderStyle.Danger" RenderStyleMode="SDKButtonRenderStyleMode.Text" Click="DeleteBusiness" ResourceTag="Action.Delete" />
            <SDKButton RenderStyle="SDKButtonRenderStyle.Secondary" RenderStyleMode="SDKButtonRenderStyleMode.Text" Click="@((args) => dialogService.Close(false))" ResourceTag="Generic.Close"/>
        </div>
    }
    @if(SetTopBar)
    {
        <PageTitle>@BusinessObj</PageTitle>
        <SetTopBar HasExtraButtons="@(FormViewModel.Buttons != null && FormViewModel.Buttons.Count > 0 ? true: false)">
            <TopBarTitle>@BusinessObj</TopBarTitle>
            <TopBarButtons>
                <TopBarButton Click="GoToCreate" ResourceTag="Action.Create" IconCssClass="fa-solid fa-file"  />
                <TopBarButton Click="GoToDuplicate" ResourceTag="Action.Duplicate" IconCssClass="fa-solid fa-copy"  />
                <TopBarButton Click="GoToEdit" ResourceTag="Action.Modify"  IconCssClass="fa-solid fa-pen"  />
                <TopBarButton Click="GoToList" ResourceTag="Action.List"  IconCssClass="fa-solid fa-list"  />
                <TopBarButton Click="DeleteBusiness" ResourceTag="Action.Delete" IconCssClass="fa-solid fa-trash-can" />
            </TopBarButtons>
            <TopBarExtraButtons>
                @foreach (var btn in FormViewModel.Buttons)
                {
                    <TopBarButton Click="@(()=> { OnClickCustomButton(@btn); })" ResourceTag="@btn.ResourceTag" IconCssClass="@btn.IconClass" />
                }
            </TopBarExtraButtons>
        </SetTopBar>
    }
}