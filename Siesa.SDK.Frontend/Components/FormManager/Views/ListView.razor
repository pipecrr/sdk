@using SDK.Components.Visualization
@using Siesa.SDK.Frontend.Components.FormManager.Fields
@using Siesa.SDK.Entities

@if (ErrorMsg != "")
{
    <label>@ErrorMsg</label>
}
else
{

    <RadzenDataGrid 
        AllowFiltering="true" 
        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        FilterMode="FilterMode.Advanced" 
        AllowPaging="@(!ListViewModel.InfiniteScroll)" 
        PageSize="ListViewModel.Paging.PageSize"
        PagerHorizontalAlign="HorizontalAlign.Center" 
        AllowSorting="true" 
        Data="@data" 
        TItem="object" 
        IsLoading="@Loading"
        @ref="@_gridRef" 
        Count="@count" 
        LoadData="@LoadData" 
        AllowVirtualization="@(ListViewModel.InfiniteScroll)"
        ShowPagingSummary="true"
        PageSizeOptions="ListViewModel.Paging.AllowedPageSizes" 
        SelectionMode="Radzen.DataGridSelectionMode.Single"
        Value=@SelectedObjects
        ValueChanged="((objects) => OnSelectionChanged(objects))"
        class="whcm_table"
        AllowColumnResize="true"
        @key="needUpdate"
        >
        <Columns>
        @if(ListViewModel.ShowActions)
        {
            <RadzenDataGridColumn TItem="object" Title="Acciones" Width="100px" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" HeaderCssClass="untruncate-grid-column-action">
                <HeaderTemplate>
                    @if(IsSubpanel && AllowCreate && CanCreate){
                    <span
                        class="oi oi-plus cursor-pointer" @onclick="() => GoToCreate()"></span>
                    }else{
                        <span><ResourceViewer ResourceTag="Generic.Actions" /></span>
                    }                        
                </HeaderTemplate>
               
                <Template Context="data">
                    <div class="action-buttons d-flex justify-content-center">
                        @if(CanEdit && AllowEdit){
                            <button class="btn btn-sm layout_btn_standar-sm ml-1" @onclick="() => GoToEdit(((IBaseSDK)data).GetRowid())"><i
                            class="fa-solid fa-pen"></i></button>
                        }
                        
                        
                        @if(CanDelete && IsSubpanel && AllowDelete){
                            <button class="btn btn-sm layout_btn_standar-sm ml-1" @onclick="() => GoToDelete(((IBaseSDK)data).GetRowid(), data.ToString())"><span
                            class="fa-solid fa-trash-can"></span></button>

                        }
                        @* <button class="btn btn-link grid-btn-link"
                        @onclick="() => GoToDetail(((BaseSDK<>)data).Rowid)"><span class="oi oi-eye"></span></button> *@
                    </div>
                </Template>
            </RadzenDataGridColumn>
            }
            @foreach (var field in ListViewModel.Fields)
            {
                var fieldName = field.Name;
                if (fieldName.StartsWith("BaseObj."))
                {
                    fieldName = fieldName.Substring(8);
                }
                var columnType = typeof(string);
                switch (field.FieldType)
                {
                    case FieldTypes.CharField:
                    case FieldTypes.TextField:
                    case FieldTypes.EntityField:
                        break;
                    case FieldTypes.DateField:
                    case FieldTypes.DateTimeField:
                        columnType = typeof(DateTime);
                        break;
                    case FieldTypes.DecimalField:
                        columnType = typeof(decimal);
                        break;
                    case FieldTypes.IntegerField:
                        columnType = typeof(int);
                        break;
                    case FieldTypes.BooleanField:
                        columnType = typeof(bool);
                        break;

                    default:
                        break;

                        //default
                }                
                
                if(!field.Hidden){
                    if(field.Name == ListViewModel.LinkTo)
                    {
                        <RadzenDataGridColumn Property="@fieldName" TItem="object" Title="" Type="@columnType" >
                            <HeaderTemplate>
                                <span><ResourceViewer ResourceTag="@($"{BLEntityName}.{fieldName}")" /></span>
                            </HeaderTemplate>
                            <Template Context="data">
                                @if(CanDetail)
                                {
                                    @if(OnClickDetail != null){
                                        <a href="#" @onclick="() => GoToDetail(((IBaseSDK)data).GetRowid())" @onclick:preventDefault>@data</a>
                                    }else{
                                        <a href="/@BusinessName/detail/@(((IBaseSDK)data).GetRowid())/">@data</a>
                                    }
                                }else{
                                    @data
                                }
                            </Template>
                        </RadzenDataGridColumn>
                    }else{
                        if(field.FieldType == FieldTypes.Custom){
                            <RadzenDataGridColumn Property="@fieldName" TItem="object" Title="" Type="@columnType">
                                <HeaderTemplate>
                                    <span><ResourceViewer ResourceTag="@($"{BLEntityName}.{fieldName}")" /></span>
                                </HeaderTemplate>
                                <Template Context="data">
                                    <CustomField BaseModelObj="@BusinessObj" FieldOpt="field"  Definition="field.CustomComponent" BaseObj="@data"/>
                                </Template>
                            </RadzenDataGridColumn>
                        }else if(columnType == typeof(bool)){
                            <RadzenDataGridColumn Property="@fieldName" TItem="object" Title="" Type="@columnType" TextAlign="TextAlign.Center" HeaderCssClass="align-header-left" >
                                <HeaderTemplate>
                                    <span><ResourceViewer ResourceTag="@($"{BLEntityName}.{fieldName}")" /></span>
                                </HeaderTemplate>
                                <Template Context="data">
                                    <input type="checkbox" checked="@(data.GetType().GetProperty(fieldName).GetValue(data))" disabled />
                                </Template>
                            </RadzenDataGridColumn>

                        }else if(field.FieldType == FieldTypes.SelectField){
                            <RadzenDataGridColumn Property="@fieldName" TItem="object" Title="" Type="@columnType">
                                <HeaderTemplate>
                                    <span><ResourceViewer ResourceTag="@($"{BLEntityName}.{fieldName}")" /></span>
                                </HeaderTemplate>
                                <Template Context="data">
                                    <DynamicComponent Type="@typeof(SelectFieldDetail<>).MakeGenericType(field.GetFieldObj(data).SelectFieldType)" Parameters="@GetSelectFieldParameters(data, field, fieldName)" />
                                </Template>
                            </RadzenDataGridColumn>

                        }else if(columnType == typeof(decimal)){
                            <RadzenDataGridColumn Property="@fieldName" TItem="object" Title="" Type="@columnType" TextAlign="TextAlign.Right" HeaderCssClass="align-header-left">
                                <HeaderTemplate>
                                    <span><ResourceViewer ResourceTag="@($"{BLEntityName}.{fieldName}")" /></span>
                                </HeaderTemplate>
                            </RadzenDataGridColumn>
                        }else{
                        <RadzenDataGridColumn Property="@fieldName" TItem="object" Title="" Type="@columnType">
                            <HeaderTemplate>
                                <span><ResourceViewer ResourceTag="@($"{BLEntityName}.{fieldName}")" /></span>
                            </HeaderTemplate>
                        </RadzenDataGridColumn>
                        }
                        
                    }
                }
            }
        </Columns>
    </RadzenDataGrid>
    @if(SetTopBar)
    {
        <PageTitle><ResourceViewer ResourceTag="@($"{BusinessName}.Plural")" /></PageTitle>
        <SetTopBar HasExtraButtons="@(ListViewModel.Buttons != null && ListViewModel.Buttons.Count > 0 ? true: false)">
            <TopBarTitle><ResourceViewer ResourceTag="@($"{BusinessName}.Plural")" /></TopBarTitle>
            <TopBarButtons>
                @if(CanCreate)
                {
                    <TopBarButton Click="GoToCreate" ResourceTag="Action.Create" IconCssClass="fa-solid fa-circle-plus" />
                }
            </TopBarButtons>
            <TopBarExtraButtons>
                @foreach (var btn in ListViewModel.Buttons)
                {
                    <TopBarButton Click="@(()=> { OnClickCustomButton(@btn); })" ResourceTag="@btn.ResourceTag" IconCssClass="@btn.IconClass" />
                }
            </TopBarExtraButtons>
        </SetTopBar>
    }
}
