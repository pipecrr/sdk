@page "/{BusinessName}/"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@inherits Siesa.SDK.Frontend.Components.FormManager.ViewModels.DynamicBaseViewModel

@if (ErrorMsg != null && ErrorMsg != "")
{
    <text>@ErrorMsg</text>
}
else if (BusinessObj != null)
{
    @* <DynamicComponent Type="@(typeof(Views.ListView))" Parameters="@parameters" /> *@

    <ListView 
        BusinessObj="@BusinessObj"
        BusinessName="@BusinessName"
        AllowCreate="@AllowCreate"
        AllowEdit="@AllowEdit"
        AllowDelete="@AllowDelete"
        OnSelectedRow="@OnSelectedRow"
        Data="@Data"
        IsSubpanel="@IsSubpanel"
        SetTopBar="@SetTopBar"
        ViewdefName="@ViewdefName"
        OnClickEdit="@OnClickEdit"
        OnClickDetail="@OnClickDetail"
        OnClickDelete="@OnClickDelete"
        OnClickNew="@OnClickNew"
    />
}

@code {
    [Parameter] public string SubpanelFilter { get; set; }    

    [Parameter] public Action<string> OnClickEdit { get; set; } = null;
    [Parameter] public Action<string> OnClickDetail { get; set; } = null;
    [Parameter] public Action<string,string> OnClickDelete { get; set; } = null;
    [Parameter] public Action OnClickNew { get; set; } = null;

    [Parameter] public bool AllowCreate { get; set; } = true;
    [Parameter] public bool AllowEdit { get; set; } = true;
    [Parameter] public bool AllowDelete { get; set; } = true;
    [Parameter] public bool AllowDetail { get; set; } = true;
    [Parameter] public Action<object> OnSelectedRow { get; set; } = null;

    [Parameter] public string ViewdefName { get; set; } = "related_list";

    [Parameter] public IEnumerable<object> Data { get; set; } = null;

    private bool SetTopBar = false;
    private List<string> ConstantFilters = new List<string>();
    protected override void OnInitialized()
    {        
        if (IsSubpanel)
        {
            IsSubpanel = false;       
            if(!String.IsNullOrEmpty(SubpanelFilter)){                
                ConstantFilters = new List<string>() { SubpanelFilter };
            }
        }
        base.OnInitialized();
    }
}
