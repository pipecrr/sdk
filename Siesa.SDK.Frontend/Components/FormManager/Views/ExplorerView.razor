@using SDK.Components.Visualization
@using Siesa.SDK.Frontend.Components.FormManager.Fields
@inherits Siesa.SDK.Frontend.Components.FormManager.ViewModels.FormView
@using Siesa.SDK.Frontend.Components.Layout.Detail.Relationship
@using Siesa.SDK.Frontend.Components.Visualization
@if (Panels == null || Panels.Count <= 0)
{
    <ResourceViewer ResourceTag="SDK.ViewdefNotFound" />
}
else if (Loading == true)
{
    <ResourceViewer ResourceTag="Generic.Loading" />
}
else if (BusinessObj != null)
{
    <CascadingValue Value="@this">
        <EditForm id="@FormID" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit"
        EditContext="@EditFormContext">
            <ObjectGraphDataAnnotationsValidator />
            <DxFormLayout CaptionPosition="CaptionPosition.Vertical">
                <CascadingValue Value="@EditFormContext">
                    <FieldsContainer Fields="@Panels[0].Fields" SubViewdef="@Panels[0].SubViewdef"
                    DefaultColSize="@Panels[0].ColSize" ModelObj="@BusinessObj" />
                </CascadingValue>
            </DxFormLayout>
            <ValidationSummary />
            <label>@((MarkupString)ErrorMsg)</label>
        </EditForm>
        @if (FormViewModel.Relationships.Count > 0)
        {
            <DxFormLayout CaptionPosition="CaptionPosition.Vertical">
                <DxFormLayoutTabPages>
                    @foreach (var rel in FormViewModel.Relationships)
                    {
                        <DxFormLayoutTabPage Caption="@rel.ResourceTag">
                            <RelationshipPanel Relationship="@rel" Parent="@BusinessObj.BaseObj" ShowHeader="false" />
                        </DxFormLayoutTabPage>
                    }
                </DxFormLayoutTabPages>
            </DxFormLayout>

        }
    </CascadingValue>
    <PageTitle><ResourceViewer ResourceTag=@Title /></PageTitle>
    <SetTopBar>
        <TopBarTitle><ResourceViewer ResourceTag=@Title /></TopBarTitle>
        <TopBarButtons>
            @foreach (var btn in FormViewModel.Buttons)
            {
                <SDKButton RenderStyle="@btn.RenderStyle" RenderStyleMode="SDKButtonRenderStyleMode.Text"
            Click="@(()=> { OnClickCustomButton(@btn); })" ResourceTag="@btn.ResourceTag" />
            }
            <SDKButton RenderStyle="SDKButtonRenderStyle.Info" RenderStyleMode="SDKButtonRenderStyleMode.Text"
                Click="GetFirstRowid" ResourceTag="<<" />
            <SDKButton RenderStyle="SDKButtonRenderStyle.Info" RenderStyleMode="SDKButtonRenderStyleMode.Text"
                Click="GetPreviousRowid" ResourceTag="<" />
            <SDKButton RenderStyle="SDKButtonRenderStyle.Info" RenderStyleMode="SDKButtonRenderStyleMode.Text"
                Click="GetNextRowid" ResourceTag=">" />
            <SDKButton RenderStyle="SDKButtonRenderStyle.Info" RenderStyleMode="SDKButtonRenderStyleMode.Text"
                Click="GetLastRowid" ResourceTag=">>" />
            

        </TopBarButtons>
    </SetTopBar>

}

@code{
    private async void GetFirstRowid()
    {
        await BusinessObj.GetFirstRowid();
        StateHasChanged();
    }

    private async void GetPreviousRowid()
    {
        await BusinessObj.GetPreviousRowid();
        StateHasChanged();
    }

    private async void GetNextRowid()
    {
        await BusinessObj.GetNextRowid();
        StateHasChanged();
    }

    private async void GetLastRowid()
    {
        await BusinessObj.GetLastRowid();
        StateHasChanged();
    }
}
