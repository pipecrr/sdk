
@using Siesa.SDK.Frontend.Components.Fields
@switch (FieldType)
{
    case FieldTypes.CharField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <CharFieldDetail BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName" />

        }
        else
        {
            <CharField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        }
        break;
    case FieldTypes.DecimalField:
        
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {

            <DecimalFieldDetail BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        }
        else
        {
            <DecimalField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        }
        break;
    case FieldTypes.IntegerField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {

            <IntegerFieldDetail BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt" />
        }
        else
        {
            <IntegerField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        }
        break;
    case FieldTypes.ByteField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {

            <ByteFieldDetail BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt" />
        }
        else
        {
            <ByteField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        }
        break;
    case FieldTypes.MultiSelectField:
        <MultiSelectField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        break;
    case FieldTypes.SelectField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <DynamicComponent Type="@SelectFieldDetailType" Parameters="@parameters" />
        }
        else
        {
            <DynamicComponent Type="@SelectFieldType" Parameters="@parameters" />
        }
        break;
    case FieldTypes.DateField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <DateFieldDetail BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt" />
        }
        else
        {
            <DateField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName" ShowTime="false"  />
        }
        break;
    case FieldTypes.TimeField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <TimeFieldDetail BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt" />
        }
        else
        {
            <TimeField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"/>
        }
        break;
    case FieldTypes.DateTimeField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <DateTimeFieldDetail BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt" />
        }
        else
        {
            <DateTimeField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName" TDate="DateTime" ShowTime="true"  />
        }
        break;
    case FieldTypes.TextField:
        <TextField BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        break;
    case FieldTypes.BooleanField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <BooleanFieldDetail BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt" />
        }
        else
        {
            <BooleanField BindModel="@fieldModelObj" FieldName="@fieldName" FieldOpt="@FieldOpt"  />

        }
        break;
    case FieldTypes.Unknown:
        <span>@UnknownFieldType No implementado</span>
        break;
    case FieldTypes.EntityField:
        @if (FieldOpt.ViewContext != null && FieldOpt.ViewContext == "DetailView")
        {
            <EntityFieldDetail BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName" />
        }
        else
        {
            <EntityField BaseModelObj="@ModelObj" BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  />
        }
        break;
    case FieldTypes.Custom:
        <CustomField BaseModelObj="@ModelObj" BindModel="@fieldModelObj" FieldOpt="@FieldOpt" FieldName="@fieldName"  Definition="@FieldOpt.CustomComponent"/>
        break;
    default:
        <span>@FieldType No implementado</span>
        break;
}
