@inherits FieldClass<bool>
@using System.Linq.Expressions
@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.FormManager.Fields

@if (!FieldOpt.Hidden){

    <SDKSwitch Value="@(BindValue)" 
    ValueChanged="@((value) => {SetValue(value);})" 
    Disabled="@_disabled" 
    ValueExpression="@ValueExpression"/>

    @if (FieldOpt.ViewContext != "DetailView"){

        @FieldValidationTemplate
    }

}

@code{
    public Expression<Func<bool>> ValueExpression { get; set; }
    private bool _disabled;
    private void isDisabled(){
        _disabled = (FieldOpt.Disabled || FieldOpt.ViewContext == "DetailView");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        isDisabled();
        var access = Expression.Property(Expression.Constant(BindModel, BindModel.GetType()), FieldName);
        ValueExpression = (Expression<Func<bool>>)Expression.Lambda(typeof(Func<>).MakeGenericType(typeof(bool)), access);
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        isDisabled();
    }
}



