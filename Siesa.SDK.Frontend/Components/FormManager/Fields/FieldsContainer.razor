@if(SubViewdef != null && SubViewdef.Panels != null && SubViewdef.Panels.Count > 0){
     @if (SubViewdef.Panels.Count > 1)
    {
        <DxFormLayoutTabPages>
            @foreach (var panel in SubViewdef.Panels)
            {
                <DxFormLayoutTabPage Caption="@panel.Label">
                    <FieldsContainer Fields="@panel.Fields" SubViewdef="@panel.SubViewdef" ModelObj="@ModelObj" DefaultColSize="@panel.ColSize" />
                </DxFormLayoutTabPage>
            }
        </DxFormLayoutTabPages>

    }
    else
    {
        <FieldsContainer Fields="@SubViewdef.Panels[0].Fields" SubViewdef="@SubViewdef.Panels[0].SubViewdef" ModelObj="@ModelObj" DefaultColSize="@SubViewdef.Panels[0].ColSize" />
    }
}else{

    @foreach(FieldOptions fld in Fields)
    {
        @if(!fld.Hidden){
            <DxFormLayoutItem Caption="@fld.Label"
                            ColSpanMd="@GetColSize(fld,"MD")"
                            ColSpanLg="@GetColSize(fld,"LG")"
                            ColSpanXl="@GetColSize(fld,"XL")"
                            ColSpanSm="@GetColSize(fld,"SM")"
                            ColSpanXs="@GetColSize(fld,"XS")">
                <Template>
                    <DynamicField FieldOpt="@fld" ModelObj="@ModelObj" />
                </Template>
            </DxFormLayoutItem>
        }
        
    }
}



@code {
    [Parameter] public List<FieldOptions> Fields { get; set; }
    [Parameter] public SubViewdef SubViewdef { get; set; }

    [Parameter] public object ModelObj { get; set; }
    [Parameter] public Dictionary<string, int> DefaultColSize { get; set; }

    private int GetColSize(FieldOptions fld, string screen_size)
    {
        var colsize = DefaultColSize.ContainsKey(screen_size) ? DefaultColSize[screen_size] : 0;

        if (fld.ColSize.ContainsKey(screen_size))
        {
            colsize = fld.ColSize[screen_size];
        }

        return colsize;

    }
}
