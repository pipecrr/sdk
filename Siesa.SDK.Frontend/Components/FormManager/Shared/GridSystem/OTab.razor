<li class="nav-item" @onclick="@(()=>Parent.ActivateTab(Id))">
    <a class="nav-link @GetClassCss()" id="@Id" data-toggle="pill" role="tab" aria-controls="pills-@Id" aria-selected="true">@Label</a>
</li>
@code {
    [Parameter] public string Id { get; set; }
    [Parameter] public string Label { get; set; }


    [CascadingParameter] OTabSet Parent { get; set; }

    private bool Show { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Parent.AddTab(this);
        }
    }

    public void Toggle()
    {
        Show = !Show;
        InvokeAsync(StateHasChanged);
    }

    private string GetClassCss()
    {
        if (Show)
        {
            return "active";
        }
        return "";
    }

    public RenderFragment RenderContent => (builder =>
    {
        //int i = 0;
        //builder.OpenElement(i++, "li");
        //builder.AddAttribute(i++, "class", "nav-item");
        //builder.OpenElement(i++, "a");
        //builder.AddAttribute(i++, "class", "nav-link active");
        //builder.AddAttribute(i++, "id", Id);
        //builder.AddAttribute(i++, "data-toggle", "tab");
        //builder.AddAttribute(i++, "href", "#" + Id);
        //builder.AddAttribute(i++, "role", "tab");
        //builder.AddAttribute(i++, "aria-controls", Id);
        //builder.AddAttribute(i++, "aria-selected", "true");
        //builder.AddAttribute(i++, "onclick", EventCallback.Factory.Create<MouseEventArgs>(this, ()=>{ Parent.ActivateTab(this.Id);  }));
        //builder.AddContent(i++, Label);
        //builder.CloseElement();
        //builder.CloseElement();




    });
    }
