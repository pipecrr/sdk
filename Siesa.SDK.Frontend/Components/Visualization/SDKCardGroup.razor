@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.Global.Enums
@using Siesa.SDK.Shared.Services
@using Siesa.SDK.Frontend.Components.FormManager.ViewModels
@inherits SDKComponent

<div class="border rounded" >
    <div class="row px-2 py-3">
        <div class=@($"col-3 {Showborder}")>
            <p class="col-form-label-sm font-weight-bold"> <ResourceViewer ResourceTag=@IdResourceTagSwitch/> </p>
            @if(SelectBar){
                <SDKSelectBar Value=@SwitchValue ValueChanged=@SwitchValueChanged />
            }else{
                <SDKSwitch Value=@SwitchValue ValueChanged="@SwitchValueChanged" Disabled="@Disabled" />
            }
        </div>
        @if(ChildContent != null || BusinessName != null){
            <div class="col-9">
                @if(ChildContent != null){
                    <CascadingValue Value="@SwitchValue">
                        @ChildContent
                    </CascadingValue>
                }else if(BusinessName != null){
                    <FreeForm  
                        BusinessObj=@BusinessObj
                        Viewdef=@Viewdef
                        SetTopBar=false
                        BusinessName=@BusinessName
                        ViewContext=@ViewContext
                    />
                }
            </div>
        }
    </div>
</div>

@code{

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public bool SwitchValue { get; set; }

    [Parameter] public string IdResourceTagSwitch { get; set; }

    [Parameter] public Action<bool> SwitchValueChanged { get; set; }

    [Parameter] public string? BusinessName { get; set; }

    [Parameter] public dynamic? BusinessObj { get; set; }

    [Parameter] public string? Viewdef { get; set; }

    [Parameter] public DynamicViewType ViewContext { get; set; } = DynamicViewType.Create;

    [Parameter] public bool DisabledFreeForm { get; set; }

    [Parameter] public bool Disabled { get; set; }
    [Parameter] public bool SelectBar { get; set; }

    private string Showborder {get; set;} = "";

    protected override async Task OnInitializedAsync()
    {
        if(ChildContent != null || BusinessName != null){
            Showborder = "border-right";
        }
        await base.OnInitializedAsync();
    }

    protected override void OnParametersSet()
    {
        SetDinamicView();
    }

    private void SetDinamicView(){
        if(DisabledFreeForm){
            ViewContext = SwitchValue? DynamicViewType.Create : DynamicViewType.Detail;
        }
        if(Disabled){
            ViewContext = DynamicViewType.Detail;
        }
    }

}