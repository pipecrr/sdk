@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Shared.DTOS
@using Siesa.Global.Enums

@inject SDKNotificationService Notification


@layout EmptyLayout

<div class="container-fluid">
    <div class="container-fluid">
        <h2>SDKDynamicSelectBar</h2>
        <p>Demonstration and configuration of the SDKDynamicSelectBar component</p>
    </div>
    <div class="row px-3">
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>Default</h3>
                <SDKDynamicSelectBar  Items="@Items"/>
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>bind-Value</h3>
                <SDKDynamicSelectBar Items="@Items"
                @bind-Value="@BindValue" ValueChangedItem="@Refresh"/>
                <p>Item Selected: @BindValue?.Value?.ToString()</p>
            </SDKCard> 
        </div>
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>Value Change</h3>
                <SDKDynamicSelectBar Items="@Items" Value="@SelectedItem"
                    ValueChanged="(SelectedItem)=>OnChange(SelectedItem)"/>
            </SDKCard>
        </div>
    </div>
</div>
@code
{
    private List<DynamicSelectBarDetailDTO> Items { get; set; } = new List<DynamicSelectBarDetailDTO>();

    private DynamicSelectBarDetailDTO BindValue { get; set; }

    private DynamicSelectBarDetailDTO SelectedItem { get; set; }


    protected override void OnInitialized()
    {
        DynamicSelectBarDetailDTO item1 = new DynamicSelectBarDetailDTO()
            {
                Icon = "fa-hexagon-check",
                IconColor = "1fbf44",
                On = true,
                Value = enumStatusBaseMaster.Active
            };

        DynamicSelectBarDetailDTO item2 = new DynamicSelectBarDetailDTO()
            {
                Icon = "fa-hexagon-minus",
                IconColor = "dd4646",
                On = false,
                Value = enumStatusBaseMaster.Inactive
            };

        Items.Add(item1);
        Items.Add(item2);
        base.OnInitialized();
    }

    public void OnChange(DynamicSelectBarDetailDTO value)
    {
        SelectedItem = value;
        Notification.ShowSuccess($"Item Selected  {SelectedItem.Value.ToString()}");
        StateHasChanged();
    }

    public void Refresh ()
    {
        Notification.ShowError($"Item Selected  {BindValue.Value.ToString()}");
        StateHasChanged();
    }
}
