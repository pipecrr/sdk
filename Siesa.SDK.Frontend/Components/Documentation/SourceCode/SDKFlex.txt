@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Frontend.Components.FormManager.Model
@using Siesa.SDK.Frontend.Components.FormManager.Views
@using Siesa.SDK.Shared.Services
@using Siesa.SDK.Entities

@inject SDKNotificationService SDKNotificationService


<div class="container-fluid">
    <div class="container-fluid">
        <h2>SDKFlex</h2>
        <p>Demostracion y configuracion Flex como componente</p>
        <p>Para agregar una flex de una consulta ya existente definiendo rowid</p>
        <ul>
            <li>Rowid: Indica el rowid de la consulta flex que se va a mostrar</li>
            <li>FlexFilters: para indicar los filtros que se enviaran en la ocnsulta si es necesario, es necesario que los filtros existan en la ocnsulta previa, tipo diccionario de string y object, donde la llave es el nombre del campo y el valor es el valor del filtro</li>
            <li>FlexFiltersTo: en caso de tener filtros entre "between", en este parametro se envia el filtro hasta, tipo diccionario de string y object, donde la llave es el nombre del campo y el valor es el valor del filtro</li>
        </ul>
    </div>
    <div class="row px-3">
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>SDKFlex</h3>
                <SDKFlex Rowid="18" />
            </SDKCard>
        </div>        
    </div>
</div>


@code {
    protected override async Task OnInitializedAsync(){
        
        filters.Add("Rowid", "5");
        filtersTo.Add("Rowid", "10");

    }
    Dictionary<string, object> filters = new Dictionary<string, object>();
    Dictionary<string, object> filtersTo = new Dictionary<string, object>();

};
