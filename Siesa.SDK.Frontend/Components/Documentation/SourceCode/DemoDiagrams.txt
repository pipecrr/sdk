@using Blazor.Diagrams.Core
@using Blazor.Diagrams.Core.Geometry
@using Blazor.Diagrams.Core.Models
@using Blazor.Diagrams.Components
@using Siesa.SDK.Frontend.Components.Documentation.Visualization.OrgChart
@inject IJSRuntime JSRuntime

@if(IsReady)
{
    <div style="height: 600px; width: 100%">
        <CascadingValue Value="Diagram">
            <DiagramCanvas></DiagramCanvas>
        </CascadingValue>
    </div>
}

@code {
    private Diagram Diagram { get; set; }

    private bool IsReady;

    protected override void OnInitialized()
    {
        base.OnInitialized();

       
        var options = new DiagramOptions
        {
            DeleteKey = "Delete", // What key deletes the selected nodes/links
            DefaultNodeComponent = null, // Default component for nodes
            AllowMultiSelection = true, // Whether to allow multi selection using CTRL
            EnableVirtualization = false,
            Links = new DiagramLinkOptions
            {
                // Options related to links
            },
            Zoom = new DiagramZoomOptions
            {
                Minimum = 0.5, // Minimum zoom value
                Inverse = false, // Whether to inverse the direction of the zoom when using the wheel
                // Other
            }
        };
        Diagram = new Diagram(options);
        Diagram.RegisterModelComponent<OrgNodeModel, OrgNodeComponent>();
        Setup();
    }

    private async Task<bool> UtilsImported()
    {   
        try
        {
            await JSRuntime.InvokeAsync<object>("window.loadCss");
            return true;
        }catch(Exception e)
        {
            return false;   
        }
    }

    private void Setup()
    {
        var node1 = new OrgNodeModel(new Blazor.Diagrams.Core.Geometry.Point(300, 50));
        node1.AddPort(PortAlignment.Bottom);
        node1.AddPort(PortAlignment.Top);
        node1.AddPort(PortAlignment.Left);
        node1.AddPort(PortAlignment.Right);

        node1.Name = "Pepito Perez";
        node1.WorkPosition = "CEO";
        node1.Photo = "_content/Siesa.SDK.Frontend/assets/img/profile_img.jpg";

        var node2= new OrgNodeModel(new Blazor.Diagrams.Core.Geometry.Point(90, 250));
        node2.AddPort(PortAlignment.Bottom);
        node2.AddPort(PortAlignment.Top);
        node2.AddPort(PortAlignment.Left);
        node2.AddPort(PortAlignment.Right);

        node2.Name = "Roberto Peralta";
        node2.WorkPosition = "Lider";
        node2.Photo = "_content/Siesa.SDK.Frontend/assets/img/Profile_default.png";

        var node3 = new OrgNodeModel(new Blazor.Diagrams.Core.Geometry.Point(505, 250));
        node3.AddPort(PortAlignment.Bottom);
        node3.AddPort(PortAlignment.Top);
        node3.AddPort(PortAlignment.Left);
        node3.AddPort(PortAlignment.Right);

        node3.Name = "Gladys Martinez";
        node3.WorkPosition = "Ing";
        node3.Photo = "_content/Siesa.SDK.Frontend/assets/img/Profile_default.png";

        var node4 = new OrgNodeModel(new Blazor.Diagrams.Core.Geometry.Point(-36, 423));
        node4.AddPort(PortAlignment.Bottom);
        node4.AddPort(PortAlignment.Top);
        node4.AddPort(PortAlignment.Left);
        node4.AddPort(PortAlignment.Right);

        node4.Name = "Yesenia Ponce";
        node4.WorkPosition = "Ing";
        node4.Photo = "_content/Siesa.SDK.Frontend/assets/img/Profile_default.png";

        var node5 = new OrgNodeModel(new Blazor.Diagrams.Core.Geometry.Point(-36, 586));
        node5.AddPort(PortAlignment.Bottom);
        node5.AddPort(PortAlignment.Top);
        node5.AddPort(PortAlignment.Left);
        node5.AddPort(PortAlignment.Right);

        node5.Name = "Milagros Cano";
        node5.WorkPosition = "Ing";
        node5.Photo = "_content/Siesa.SDK.Frontend/assets/img/Profile_default.png";

        var node6 = new OrgNodeModel(new Blazor.Diagrams.Core.Geometry.Point(-36, 752));
        node6.AddPort(PortAlignment.Bottom);
        node6.AddPort(PortAlignment.Top);
        node6.AddPort(PortAlignment.Left);
        node6.AddPort(PortAlignment.Right);

        node6.Name = "Oscar Asturias";
        node6.WorkPosition = "Ing";
        node6.Photo = "_content/Siesa.SDK.Frontend/assets/img/Profile_default.png";


        Diagram.Nodes.Add(new [] { node1, node2, node3, node4, node5, node6});
        Diagram.Links.Add(new LinkModel(node1.GetPort(PortAlignment.Bottom), node2.GetPort(PortAlignment.Top)));
        Diagram.Links.Add(new LinkModel(node1.GetPort(PortAlignment.Top), node3.GetPort(PortAlignment.Top)));
        Diagram.Links.Add(new LinkModel(node2.GetPort(PortAlignment.Bottom), node4.GetPort(PortAlignment.Top)));
        Diagram.Links.Add(new LinkModel(node4.GetPort(PortAlignment.Right), node5.GetPort(PortAlignment.Top)));
        Diagram.Links.Add(new LinkModel(node5.GetPort(PortAlignment.Left), node6.GetPort(PortAlignment.Top)));
    }

    private NodeModel NewNode(double x, double y)
    {
        var node = new NodeModel(new Blazor.Diagrams.Core.Geometry.Point(x, y));
        node.AddPort(PortAlignment.Bottom);
        node.AddPort(PortAlignment.Top);
        node.AddPort(PortAlignment.Left);
        node.AddPort(PortAlignment.Right);
        return node;
    }

    private async Task LoadImports()
    {
        if(!(await UtilsImported())){
            try
            {
                await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./_content/Siesa.SDK.Frontend/js/utils.js");
            }catch (Exception)
            {
            }
        }
        await JSRuntime.InvokeVoidAsync("window.loadCss", "_content/Z.Blazor.Diagrams/default.styles.min.css");
        await JSRuntime.InvokeVoidAsync("window.loadCss", "_content/Z.Blazor.Diagrams/style.min.css");
        await JSRuntime.InvokeVoidAsync("window.loadScript", "_content/Z.Blazor.Diagrams/script.min.js");

        IsReady = true;
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender){
            await LoadImports();   
        }
    }
}