@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.Visualization
@using System
@using Siesa.SDK.Frontend.Services

@inject SDKNotificationService Notification

@layout EmptyLayout

<div class="container-fluid">
    <div class="container-fluid">
            <h2>SDKDateField</h2> 
            <p>Demonstration and configuration of the SDKDateField component</p> 
    </div>
    <div class="row px-3"> 
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>bind-Value</h3>
                <SDKDateField @bind-Value="@DateTimeValue"/>
                <p>
                  Date: <b>@DateTimeValue.ToString("dddd, dd MMMM yyyy")</b>
                </p>
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>ReadOnly</h3>
                <SDKDateField @bind-Value="@DateTimeValue3" ReadOnly="true"/>
                <p>
                    Date: <b>@DateTimeValue3.ToString("dddd, dd MMMM yyyy")</b>
                </p>
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>Value Change</h3>
                <SDKDateField Value="@valueChange" ValueChanged="((value) => Onchange(value))"/>
            </SDKCard>
        </div>
    </div>
</div>


@code {
    DateTime DateTimeValue { get; set; } = DateTime.Now;
    DateTime DateTimeValue2 { get; set; } = DateTime.Now;
    DateTime DateTimeValue3 { get; set; } = DateTime.Now;

    DateTime valueChange;

    public DateTime Onchange(DateTime value){

        valueChange = value;
        Notification.ShowWarning("This value changed "+$"{valueChange}");

        return valueChange;  
    }
}