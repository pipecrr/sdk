@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.FormManager.Model.Fields
@using Siesa.SDK.Entities
@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Components.Visualization
@using Siesa.SDK.Frontend.Components.Documentation.DTOs

<div class="container-fluid">
    <div class="container-fluid">
        <h2>SDKEntityField</h2> 
        <p>Demostración y documentacion de componente SDKEntityField</p>
        <p>El componente recibe como parametros:</p>
        <ul>
            <li>BusinessName: Nombre del Bl papá</li>
            <li>RelatedBusiness: Nombre BL relacionado</li>
            <li>BaseObj: Entidad</li>
            <li>FieldName: Nombre del campo como se llama en el papá</li>
            <li>RelatedParams: Parametros para especificar como se va a pintar el componente en la vista desplegable, es un objeto de tipo RelatedParams que tiene 3 propiedades:
                <ul>
                    <li>ExtraFields: Lista de campos adicionales que se van a mostrar en la vista desplegable</li>
                    <li>FieldTemplate: Entero, 1 plantilla sin foto, 2 plantilla con foto, por defecto se envia en 1, sin foto</li>
                    <li>FieldPhoto: Nombre del campo de donde se va a traer la foto a pintar</li>
                </ul>
            </li>
            <li>OnChange: Evento que se dispara cuando se selecciona un elemento de la vista desplegable</li>
        </ul>
    </div>
    <div class="row px-3"> 
        <div class="col-md-6 p-3">
            <h2>Plantilla 1</h2>
            <SDKCard>
                <SDKEntityField
                    BusinessName="@BusinessName"
                    RelatedBusiness="@RelatedBusiness"
                    BaseObj="@BaseObj"
                    FieldName="@FieldName"
                    RelatedParams="@RelatedParams1"
                    OnChange="@OnChange"
                />
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <h2>Plantilla 2</h2>
            <SDKCard>
                <SDKEntityField
                    BusinessName="@BusinessName"
                    RelatedBusiness="@RelatedBusiness"
                    BaseObj="@BaseObj"
                    FieldName="@FieldName"
                    RelatedParams="@RelatedParams2"
                />
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <h2>MultiSelect</h2>
            <SDKCard>
                <SDKEntityField
                RelatedBusiness="@RelatedBusinessMulti"
                BaseObj="@BaseObjMulti"
                FieldName="@FieldNameMulti"
                IsMultiple="true"
                @ref="sdkEntityFieldRef"
            />
            <div>
                <SDKButton RenderStyle="SDKButtonRenderStyle.Primary" ResourceTag="Get Value" Click="@GetValue"/>

                @foreach (var item in valuesSelected){
                    <SDKBadge Style="SDKBadgeStyle.Light" Value="@item.ToString()"></SDKBadge>
                }
            </div>
            </SDKCard>
        </div>
    </div>
</div>

@code {
    IList<dynamic> valuesSelected = new List<dynamic>();
    SDKEntityField sdkEntityFieldRef;
    string BusinessName { get; set; } = "BLUser";
    string RelatedBusiness { get; set; } = "BLUser";
    E00220_User BaseObj { get; set; } = new E00220_User();
    string FieldName { get; set; } = "UserReportTo";

    string RelatedBusinessMulti { get; set; } = "BLUser";
    TestMultiSelectDTO BaseObjMulti { get; set; } = new TestMultiSelectDTO();
    string FieldNameMulti { get; set; } = "Users";

    RelatedParams RelatedParams1 { get; set; } = new RelatedParams(){
        ExtraFields = new List<string>(){"Id","Name"}
    };
    RelatedParams RelatedParams2 { get; set; } = new RelatedParams(){
        ExtraFields = new List<string>(){"Id","Name"},
        FieldTemplate = 2
    };

    public void OnChange(){
        Console.WriteLine("OnChange");
    }
    public void GetValue(){
        valuesSelected = sdkEntityFieldRef.GetItemsSelected();
    }
}