@using Siesa.SDK.Shared.Services
@using System.Reflection;
@using System.Text;
@using Siesa.SDK.Shared.Utilities;
@using System.IO;
@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Services


@inject IBackendRouterService BackendRouterService
@inject IAuthenticationService AuthenticationService
@inject SDKNotificationService Notification

@layout EmptyLayout


<div class="container-fluid">
    <div class="container-fluid">
            <h2>EmailService</h2> 
            <p>Demostracion de uso EmailService</p>
    </div>
    <div class="row px-3"> 
        <div class="col-md-6 p-3">
            <SDKCard >
                <h3>Demo de envio de email</h3>
                <p>Envio de email con imagenes embebidas</p>
                <p>Se envia un email con dos archivos adjuntos</p>
                <p>Solo desde un BLBack se puede hacer uso del servicio</p>
                <p>Para este demo el metodo TestSendEmail se hizo en BLCountry, al final se deja el fragmento de codigo</p>
                <p>El metodo TestSendEmail recibe 4 parametros</p>
                <ul>
                    <li>Subject: Asunto del email</li>
                    <li>Body: Cuerpo del email</li>
                    <li>Recipients: Listado de correo electronico destino</li>
                    <li>cc: Listado de copia oculta (Por defecto en null, no obligatorio)</li>
                    <li>bcc: Listado de copia de carbon oculta (Por defecto en null, no obligatorio)</li>
                    <li>attachment: Diccionario string, bytes[] - para definir los adjuntos (Por defecto en null, no obligatorio)</li>
                </ul>
                <p>si en el cuerpo del correo se encuentra el identificador("cid:img1.png") de un adjunto(imagen) se incrustara en el cuerpo, asi como te muestra en este Demo</p>

            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <SDKCard >
                <p>Digite el correo electronico destino</p>
                <SDKEmailField @bind-Value="@Recipients"
                    CssClass="cw-320"/>

                <button class="btn btn-primary" @onclick="SendEmail">Enviar email</button>
            </SDKCard>
        </div>
     </div>
</div>

    

@code {

    string Recipients { get; set; } = "Destinatario";


    private string Subject = "Teste de envio de email";
    private string Body = @"<!DOCTYPE html>
                            <html lang=""en"">
                            <head>
                                <meta charset=""UTF-8"">
                                <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
                                <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
                                <title>Document</title>
                            </head>
                            <body>

                                <header>
                                    <h1>My Header</h1>
                                    <img src=""cid:img1.png""/>
                                </header>


                                <footer>
                                    <h1>My Footer</h1>
                                    <img src=""cid:img2.png""/>
                                </footer>
                            </body>
                            </html>";
                            
    private Dictionary<string, byte[]> DataImages = new Dictionary<string, byte[]>();


    private async Task SendEmail()
    {
       var BL = BackendRouterService.GetSDKBusinessModel("BLCountry",AuthenticationService);

       var result = await BL.Call("TestSendEmail",Subject, Body, Recipients, DataImages);
    }

  
    protected override async Task OnInitializedAsync()
    {
        await GetImagesBody();
    }

    private async Task GetImagesBody()
    { 
        Dictionary<string, string> Images = new Dictionary<string, string>();
        Images.Add("DocPDF1.pdf", $"Siesa.SDK.Frontend.Components.Documentation.SourceCode.Diagrams.txt");
        Images.Add("DocPDF2.pdf", $"Siesa.SDK.Frontend.Components.Documentation.SourceCode.SDKBadge.txt");
        
        
        foreach (var image in Images)
        {
            byte[] arrayImage = Utilities.ReadAssemblyResourceBytes(this.GetType().Assembly, image.Value);

            DataImages.Add(image.Key, arrayImage);
        } 

    }
}

