@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Components.Visualization

@inject SDKNotificationService Notification


@layout EmptyLayout

<div class="container-fluid">
    <div class="container-fluid">
            <h2>SDKSelectBar</h2> 
            <p>Demonstration and configuration of the SDKSelectBar component</p> 
    </div>
    <div class="row px-3"> 
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>Select Bar</h3>
            <SDKSelectBar ItemType="int" @bind-Value="@myValue" Data="@TestList"></SDKSelectBar>
            <p>Item Selected: @myValue</p>
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>Select Bar Value Changed</h3>
            <SDKSelectBar ItemType="int" Value="@myValue2" Data="@TestList" ValueChanged="(myValue2)=>Onchange(myValue2)"></SDKSelectBar>
            <p>Item Selected: @myValue2</p>
            </SDKCard>
        </div>
        <div class="col-md-6 p-3">
            <SDKCard>
                <h3>Select Bool Value</h3>
            <SDKSelectBar ItemType="bool" Value="@myValue3"  ValueChanged="(myValue3)=>OnchangeBool(myValue3)" 
                    DenialResourceTag="Demo.Option.Affirmation" AffirmationResourceTag="Demo.Option.Denial"/>
            <p>Item Selected: @myValue3</p>
            </SDKCard>
        </div>
    </div>
</div>
@code
{
    int myValue;
    int myValue2;
    bool myValue3;
    List<SelectBarItemWrap<int>> TestList = new List<SelectBarItemWrap<int>>()
    {
        new SelectBarItemWrap<int>() {Key=1, Name="Item 1"},
        new SelectBarItemWrap<int>() {Key=2, Name="Item 2"},
        new SelectBarItemWrap<int>() {Key=3, Name="Item 3"}
    };
    public int Onchange(int item){
    myValue2 = item;
        switch (item)
        {
            case 1:
                Notification.ShowSuccess("Item Selected 1");
                return myValue2;
            case 2:
                Notification.ShowWarning("Item Selected 2");
                return myValue2;
            case 3:
                Notification.ShowError("Item Selected 3");
                return myValue2;
            default:
                return 0;
        }
    }
    public int OnchangeBool(bool item){
    myValue3 = item;
        switch (item)
        {
            case true:
                Notification.ShowSuccess("Item Selected true");
                return myValue2;
            case false:
                Notification.ShowWarning("Item Selected false");
                return myValue2;
            default:
                return 0;
        }
    }
}