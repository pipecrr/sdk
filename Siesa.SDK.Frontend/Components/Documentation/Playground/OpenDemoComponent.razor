@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Shared.Utilities
@using System.IO
<div>
    <div class="row">
        <div class="col-12">
            <h5>Search</h5>
            <SDKCharField @bind-Value="_searchString"/>
        </div>
        <div class="col-12">
            <ul class="playground-file-chooser">
            @foreach (var file in _fileList.Where(x => string.IsNullOrEmpty(_searchString) ? true : x.Contains(_searchString, StringComparison.InvariantCultureIgnoreCase)))
            {
                <li>
                    <a href="#" @onclick="() => SelectFile(file)" @onclick:stopPropagation="true" @onclick:preventDefault>@Path.GetFileNameWithoutExtension(file)</a>
                </li>
            }
            </ul>
        </div>
        
    </div>
</div>
@code {
    [Parameter]
    public DialogService DialogService { get; set; }
    private string _searchString = "";
    private List<string> _fileList = new List<string>();
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _fileList = Utilities.GetAssemblyResources(this.GetType().Assembly, $"Components.Documentation.SourceCode")
            .Where(x => string.Equals(Path.GetExtension(x), ".txt", StringComparison.InvariantCultureIgnoreCase))
            .Select(x => x.Replace("Siesa.SDK.Frontend.Components.Documentation.SourceCode.", ""))
            .ToList();
    }
    
    private void SelectFile(string file)
    {
        var content = Utilities.ReadAssemblyResource(this.GetType().Assembly, $"Components.Documentation.SourceCode.{file}");
        var newFileName = $"{Path.GetFileNameWithoutExtension(file)}.razor";
        DialogService.Close(new Tuple<string, string>(newFileName, content));
    }
}