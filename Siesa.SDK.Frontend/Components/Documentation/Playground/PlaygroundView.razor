@page "/sdk-docs/playground"

@using Siesa.SDK.Components.Visualization

@layout EmptyLayout
<SDKGlobalLoader />
<div class="playground-container">
    <div class="playground-toolbar">
        <h3 class="playground-title">SDK Playground</h3>
        <div class="playground-buttons">
            <SDKButton IconCssClass="@ChangeLayoutIcon" Click="ChangeLayout" CssClass="playground-button" RenderStyleMode="SDKButtonRenderStyleMode.Outline" RenderStyle="SDKButtonRenderStyle.Secondary" />
            <SDKButton ResourceTag="Load Demo" OnlyIcon="false" IconCssClass="fa-file" Enabled="RunEnabled" Click="OpenDemoDialog" CssClass="playground-button" RenderStyleMode="SDKButtonRenderStyleMode.Outline" RenderStyle="SDKButtonRenderStyle.Secondary" />
            <SDKButton ResourceTag="@RunTag" OnlyIcon="false" IconCssClass="@RunIcon" Enabled="RunEnabled" Click="RunCode" CssClass="playground-button" RenderStyleMode="SDKButtonRenderStyleMode.Outline" RenderStyle="SDKButtonRenderStyle.Secondary" />
        </div>
    </div>
    <RadzenSplitter Orientation="Radzen.Orientation.Horizontal">
        <RadzenSplitterPane Size="20%">
            <div class="container-fluid">
                <div class="filetree-container">
                    <div class="filetree-topbar" @onmouseover="MouseOverFileTopbar" @onmouseout="MouseOutFileTopbar">
                        <p class="container-title">Files</p>
                        @if(_showFileTopbarButtons)
                        {
                        <div class="filetree-topbar-buttons">
                            <SDKButton IconCssClass="fa-folder-plus" Click="AddFolder" />
                            <SDKButton IconCssClass="fa-file-plus" Click="AddFile" />
                        </div>
                        }
                    </div>
                    <FileTree Entries=@Entries OnSelect="@OnSelectItem" @ref="_fileTreeRef"/>
                </div>
            </div>
        </RadzenSplitterPane>
        <RadzenSplitterPane Size="80%">
        <RadzenSplitter Orientation="@_currentLayout">
            
            <RadzenSplitterPane>
                <div class="code-container">
                    <SDKTabs @ref="_TabsRef">
                        @foreach(var opnEntry in OpenedEntries)
                        {
                            <SDKTab @key="@opnEntry.Name">
                                <TabTemplate>
                                    <a role="tab" class="nav-link @GetActiveTabCss(opnEntry)" @onclick="(() => _fileTreeRef?.Select(opnEntry))">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>@opnEntry.Name</div>
                                            <a @onclick="(() => CloseEntry(opnEntry))" class="close ml-1 close-tab-button">
                                                <SDKIcon Name="fa-times" />
                                            </a>
                                        </div>
                                    </a>
                                </TabTemplate>
                                <ChildContent>
                                @if (_isLoaded)
                                {
                                    <CodeViewer CssClass="code-viewer-area" Code="@opnEntry.Code" CodeChanged="@((e) => opnEntry.Code=e)" FileName="@opnEntry.Name" />
                                }
                                </ChildContent>
                            </SDKTab>
                        }
                    </SDKTabs>
                </div>
            </RadzenSplitterPane>
            <RadzenSplitterPane>
                    <div lass="result-container">
                    <p class="container-title">Result <SDKIcon Name="@ResultIcon"/></p>
                    <ErrorBoundary @ref="errorBoundary">
                        <ChildContent>
                            @if (_compiledType != null)
                            {
                                <div class="result-area">
                                    <DynamicComponent Type="@_compiledType"/>
                                </div>
                            }
                        </ChildContent>
                        <ErrorContent Context="Exception">
                            <div class="result-area">
                                <div class="col-12 text-center font_color_primary_dark py-5">
                                    <SDKIcon Name="fa-triangle-exclamation fa-3x"/>
                                    <p class="mt-3">
                                        <p>@Exception</p>
                                    </p>
                                </div>
                            </div>
                        </ErrorContent>
                    </ErrorBoundary>
                
                    @if (_errorMessage != null)
                    {
                        <div class="result-area">
                            <div class="col-12 text-center font_color_primary_dark py-5">
                                <SDKIcon Name="fa-triangle-exclamation fa-3x"/>
                                <p class="mt-3">
                                    <p>@_errorMessage</p>
                                </p>
                            </div>
                        </div>
                    }
                </div>
            </RadzenSplitterPane>
        </RadzenSplitter>
        </RadzenSplitterPane>
        
        
    </RadzenSplitter>
</div>
@code {
    
    private async Task OpenDemoDialog()
    {
        Tuple<string, string> selectedCode = await SDKDialogService.ShowCustomDialog(ds => @<OpenDemoComponent DialogService="@ds"/>, ShowTitle: false, standardWidth: SDKModalWidth.Medium, CssClass: "open-demo-dialog");
        if (selectedCode != null && selectedCode.Item1 != null && selectedCode.Item2 != null)
        {
            await LoadSingleCode(selectedCode.Item2, selectedCode.Item1);
            //await _codeEditor.SetValue(selectedCode);
            _ = SDKNotificationService.ShowSuccess("Code loaded");
        }
        else
        {
            _ = SDKNotificationService.ShowError("No code selected");
        }
    }
}