@inject UtilsManager UtilManager
@inherits SDKComponent


<div class="sdk-steps">
    <RadzenSteps @ref="@_steps" class="@GetCss()" SelectedIndex="@SelectedIndex" ShowStepsButtons="@ShowStepsButtons" Change=@SelectedIndexChanged PreviousText="@Previous" NextText="@Next" Steps="@Steps" data-automation-id="@GetAutomationId()">
    </RadzenSteps>
</div>

@code{
    [Parameter] public string PreviousResourceTag {get; set;} = "Action.SDKSteps.Previous";
    [Parameter] public string NextResourceTag {get; set;} = "Action.SDKSteps.Next";
    [Parameter] public RenderFragment Steps{get; set;}
    [Parameter] public bool ShowStepsButtons{get;set;} = true;
    [Parameter] public EventCallback<int> SelectedIndexChanged {get;set;}
    [Parameter] public bool ShowStepsNumbers {get; set;} = true;
    [Parameter] public string FieldName {get; set;}
    [Parameter] public int SelectedIndex {get {
                                    if (_steps != null )
                                    {
                                        return _steps.SelectedIndex;
                                    } 
                                        return 0;
                                    }
                                    set {
                                        if (_steps != null)
                                        {
                                            _steps.SelectedIndex = value;
                                        }
                                    }   
                                }

     private string Previous {get; set;} 
    private string Next {get; set;}    
    private RadzenSteps _steps; 

    protected override async Task OnInitializedAsync(){
        Previous = PreviousResourceTag;
        Next = NextResourceTag;
        Previous = await UtilManager.GetResource(PreviousResourceTag);
        Next = await UtilManager.GetResource(NextResourceTag);
    }

    private string GetCss(){
        if(ShowStepsNumbers){
            return "";
        }
        else{
            return "sdk-steps-no-numbers";
        }
    }

    protected override string GetAutomationId()
    {
        if(string.IsNullOrEmpty(AutomationId))
        {
            if(!string.IsNullOrEmpty(FieldName))
            {
                AutomationId = FieldName;
            }
        }
        return base.GetAutomationId();
    }

    
}