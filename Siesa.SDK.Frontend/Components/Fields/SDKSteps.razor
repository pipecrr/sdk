@inject UtilsManager UtilManager
@inherits Siesa.SDK.Frontend.Components.SDKComponent


<div class="sdk-steps">
    <RadzenSteps class="@GetCss()" SelectedIndex="@SelectedIndex" ShowStepsButtons="@ShowStepsButtons" Change=@SelectedIndexChanged PreviousText="@Previous" NextText="@Next" Steps="@Steps" data-automation-id="@GetAutomationId()">
    </RadzenSteps>
</div>

@code{
    [Parameter] public string PreviousResourceTag {get; set;} = "Action.SDKSteps.Previous";
    [Parameter] public string NextResourceTag {get; set;} = "Action.SDKSteps.Next";
    [Parameter] public RenderFragment Steps{get; set;}
    [Parameter] public bool ShowStepsButtons{get;set;} = true;
    [Parameter] public int SelectedIndex{get; set;}
    [Parameter] public EventCallback<int> SelectedIndexChanged {get;set;}

    [Parameter] public bool ShowStepsNumbers {get; set;} = true;

    private string Previous {get; set;} 
    private string Next {get; set;}

    protected override async Task OnInitializedAsync(){
        Previous = PreviousResourceTag;
        Next = NextResourceTag;
        Previous = await UtilManager.GetResource(PreviousResourceTag);
        Next = await UtilManager.GetResource(NextResourceTag);
    }

    private string GetCss(){
        if(ShowStepsNumbers){
            return "";
        }
        else{
            return "sdk-steps-no-numbers";
        }
    }

    protected override string GetAutomationId()
    {
        if(string.IsNullOrEmpty(AutomationId))
        {
            if(!string.IsNullOrEmpty(PreviousResourceTag))
            {
                AutomationId = PreviousResourceTag;
            }
            if(!string.IsNullOrEmpty(NextResourceTag))
            {
                AutomationId = NextResourceTag;
            }
        }
        return base.GetAutomationId();
    }

    
}