@using System.Linq.Expressions
@typeparam ItemType
@inherits SDKComponent


<div class="sdk-selectbar-container">
        @if(typeof(ItemType) == typeof(bool))
        {    
                <RadzenSelectBar Value=@Value Change="@ValueChanged" TValue="ItemType" Disabled = "@Disabled" ValueExpression="@ValueExpression"  
                        data-automation-id="@GetAutomationId()">
                        <Items>
                                <RadzenSelectBarItem Text="Si" Value="true" />
                                <RadzenSelectBarItem Text="No" Value="false" />
                        </Items>
                </RadzenSelectBar>
        }else
        {

                <RadzenSelectBar Value=@Value Change="@ValueChanged" TValue="ItemType"
                        Data="@Data" TextProperty="Name" ValueProperty="Key" Disabled = "@Disabled" ValueExpression="@ValueExpression"  
                        data-automation-id="@GetAutomationId()" />
        
        }
</div>   


@code{
        [Parameter] public Expression<Func<ItemType>> ValueExpression { get; set; }
        [Parameter] public string FieldName { get; set; }
        protected override string GetAutomationId()
        {
                if(string.IsNullOrEmpty(AutomationId))
                {
                        if (!string.IsNullOrEmpty(FieldName))
                        {
                                AutomationId = FieldName;
                        }
                }
                return base.GetAutomationId();
        }
}