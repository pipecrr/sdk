@typeparam TItem
@inherits SDKComponent
@using Siesa.SDK.Frontend.Components

<RadzenDataGridColumn TItem="@TItem" Title="@Title" Width="@Width" Filterable="@Filterable" Sortable="@Sortable" Property="@Property" Type="@ColumnType" Template="@Template" TextAlign="@TextAlignInternal" FormatString="@FormatString" CssClass="@GetCssClass()" HeaderTemplate="@HeaderTemplate" UniqueID="@UniqueId">
</RadzenDataGridColumn>

@code {
    [Parameter] public RenderFragment<TItem> Template { get; set; }
    [Obsolete("Use ResourceTag instead")]
    [Parameter] 
    public string Title { get; set; }
    [Parameter] public bool Filterable { get; set; } = true;
    [Parameter] public bool Sortable { get; set; }
    [Parameter] public string Width { get; set; } = "auto";
    [Parameter] public string Property { get; set; }
    [Parameter] public Type? ColumnType { get; set; }
    [Parameter] public SDKColumnAlign TextAlign { get; set; } = SDKColumnAlign.Left;
    [Parameter] public string FormatString { get; set; } 
    [Parameter] public bool IsActionColumn {get; set;}
    [Parameter] public RenderFragment HeaderTemplate { get; set; }
    [Parameter] public string UniqueId { get; set; }

    private Radzen.TextAlign TextAlignInternal
    {
        get{
            return TextAlign switch 
            {
                SDKColumnAlign.Left => Radzen.TextAlign.Left,
                SDKColumnAlign.Center => Radzen.TextAlign.Center,
                SDKColumnAlign.Right => Radzen.TextAlign.Right,
                _ =>Radzen.TextAlign.Left
            };
        }
        
    }

    private string GetCssClass()
    {
        if (IsActionColumn)
        {
            return "internal-sdk-gridcolumn-action";
        }
        return "";
    }

    protected override async Task OnInitializedAsync()
    {
        if(!string.IsNullOrEmpty(ResourceTag))
        {
            Title = ResourceTag;    
        }
        await base.OnInitializedAsync();
        if(!string.IsNullOrEmpty(ResourceTag))
        {
            Title = await GetText();
            StateHasChanged();
        }
    }
}