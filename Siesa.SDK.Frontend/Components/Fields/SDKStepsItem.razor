@using Siesa.SDK.Frontend.Components.Visualization

@inherits SDKComponent
@if(string.IsNullOrEmpty(IconCssClass))
{
    <RadzenStepsItem Text="@Text" Disabled="@Disabled">
        @ChildContent
    </RadzenStepsItem>
}else{
    <RadzenStepsItem Text="@Text" Disabled="@Disabled">
        <Template>
            <div class="sdk-steps-icon-container" data-automation-id="SDKStepsItem_@Text">
                <span class="rz-steps-number sdk-steps-icon"><SDKIcon Name="@IconCssClass"></SDKIcon></span>
                <span class="rz-steps-title">@Text</span>
            </div>
        </Template>
        <ChildContent>
            @ChildContent
        </ChildContent>
    </RadzenStepsItem>
}

@code{
    [Obsolete("Use ResourceTag instead")]
    [Parameter]
    public string Text {get; set;}
    [Parameter]    
    public bool Disabled {get; set;}
    [Parameter]
    public string IconCssClass {get; set;}
    [Parameter]
    public RenderFragment? ChildContent {get;set;}

    protected override async Task OnInitializedAsync()
    {
        if(!string.IsNullOrEmpty(ResourceTag))
        {
            Text = ResourceTag;    
        }
        await base.OnInitializedAsync();
        if(!string.IsNullOrEmpty(ResourceTag))
        {
            Text = await GetText();
            StateHasChanged();
        }
    }

}