@using Siesa.SDK.Frontend.Components.FormManager.ViewModels
@using GrapeCity.ActiveReports.Core.Rendering.ReportParameters
@if (!IsDetail)
{
    <SDKButton ResourceTag="Custom.Document.Button.Create" Click="@(async () => await FormView.ClickAddRow())"/>
}
<SDKGrid Data="@BusinessObj.ChildObjs" TItem="object" @ref="FormView.RefGrid">
    <Columns>
        @if (DetailConfig.CustomActions.Any() || !IsDetail)
        {
            <SDKGridColumn Width="150px" TItem="object">
                <Template Context="dataActions">
                    <CascadingValue Value="this">
                        <div class="d-flex justify-content-center" @key="@GetKey("actionButtons", dataActions)">
                            @if (ButtonDeltete != null && !IsDetail)
                            {
                                <SDKButtonCustomAttr IconCssClass="fa-trash-can" IsActionButton="true" Click="@(() => FormView.ClickDeleteRow(dataActions))" BusinessObj="@BusinessObj" Button="@ButtonDeltete" Data=@dataActions Grid=@FormView.RefGrid/>
                            }
                            else if(!IsDetail)
                            {
                                <SDKButton IconCssClass="fa-trash-can" IsActionButton="true" Click="@(() => FormView.ClickDeleteRow(dataActions))"/>
                            }
                            @foreach (var btn in DetailConfig.CustomActions)
                            {
                                if (!btn.Hidden)
                                {
                                    <SDKButtonCustomAttr IconCssClass="@btn.IconClass" IsActionButton="true" Click="@(() => FormView.OnClickCustomButton(btn, dataActions))" BusinessObj="@BusinessObj" Button="@btn" Data=@dataActions Grid=@FormView.RefGrid/>
                                }
                            }
                        </div>
                    </CascadingValue>
                </Template>
            </SDKGridColumn>
            
        }
        @foreach (FieldOptions column in DetailConfig.Fields)
        {
            <SDKGridColumn TItem="object" Title="@column.Name" UniqueId="@column.Name">
                <Template Context="data">
                    <FieldOptComponent Column="@column" Data="@data" @key="@GetKey(column.Name, data)" IsDetail="@IsDetail"/>
                </Template>
            </SDKGridColumn>
        }
    </Columns>
</SDKGrid>

@code{

    [Parameter] public dynamic BusinessObj { get; set; }
    [Parameter] public Button ButtonDeltete { get; set; }
    [Parameter] public ListViewModel DetailConfig { get; set; } = new ListViewModel();
    [CascadingParameter] public dynamic FormView { get; set; }
    [Parameter] public bool IsDetail { get; set; }

    private string GetKey(string name, dynamic data)
    {
        int index = BusinessObj.ChildObjs.IndexOf(data);
        string key = $"{name}-{index}";
        return key;
    }
}