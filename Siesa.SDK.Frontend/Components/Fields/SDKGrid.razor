@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Components.Visualization
@typeparam TItem
@inherits SDKComponent

<div>
    @if (ShowButtonCreate)
    {
        <SDKButton ResourceTag="Custom.Document.Button.Create" RenderStyle="SDKButtonRenderStyle.Primary" Click="@(async () => await ClickAddRow())" Enabled="@EnabledCreate" CssClass="@CssClassButtonCreate"/>
    }
    <RadzenDataGrid 
        AllowFiltering="@AllowFiltering" 
        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        FilterMode="FilterMode.Advanced" 
        AllowPaging="@AllowPaging" 
        PageSize="@PageSize"
        PagerHorizontalAlign="HorizontalAlign.Center" 
        AllowSorting="@AllowSorting" 
        Data="@Data" 
        TItem="@TItem" 
        IsLoading="@Loading"
        Count="@Count"    
        LoadData="@LoadData"
        AllowVirtualization="@AllowVirtualization"
        ShowPagingSummary="@ShowPagingSummary"
        class="whcm_table"
        PageSizeOptions="@AllowedPageSizes"
        SelectionMode="@SelectionMode.Get()"
        Value="@Value"
        Visible="@(!CardView)"
        ValueChanged="@ValueChanged"
        AllowColumnResize="@AllowColumnResize"
        FilterText="Filtrar"
        ContainsText="Contiene"
        EqualsText="Igual"
        NotEqualsText="Diferente"
        GreaterThanText="Mayor que"
        GreaterThanOrEqualsText="Mayor o igual que"
        LessThanText="Menor que"
        EmptyText="No hay datos"
        IsNullText="Es nulo"
        IsNotNullText="No es nulo"
        ColumnsText="Columnas"
        IsEmptyText="Está vacío"
        EndsWithText="Termina con"
        PageSizeText="Tamaño de página"
        AllColumnsText="Todas las columnas"
        GroupPanelText="Arrastre una columna aquí para agrupar por esa columna"
        IsNotEmptyText="No está vacío"
        OrOperatorText="O"
        StartsWithText="Empieza con"
        AndOperatorText="Y"
        ApplyFilterText="Aplicar"
        ClearFilterText="Limpiar"
        ColumnsShowingText="Columnas mostradas"
        DoesNotContainText="No contiene"
        LessThanOrEqualsText="Menor o igual que"
        EnumFilterSelectText="Seleccione"
        PagingSummaryFormat="Página {0} de {1} ({2} registros)"
        AllowRowSelectOnRowClick="AllowRowSelectOnRowClick"
        @ref="_grid">
        <EmptyTemplate>
            @if(EmptyTemplate != null){
                @EmptyTemplate
            }else{
                <div class="col-12 text-center font_color_primary_dark py-4">
                    <SDKIcon Name="fa-eye-slash fa-3x"/>
                    <p class="pt-3 m-0"><ResourceViewer ResourceTag="Custom.Generic.NoData" /></p>
                </div>
            }
        </EmptyTemplate>
        <Columns>
            @if(ShowRadioButtons){
                <SDKGridColumn TItem="TItem" Width="50px">
                    <Template Context="Data">
                        <div class="d-flex justify-content-center" data-automation-id="SDKGridRadioButton_CheckItem">
                            <input type="radio" Value="@(Value != null && Value.Contains(Data))" checked="@Check(Data)">
                        </div>
                    </Template>
                </SDKGridColumn>
            }
            @if(ShowButtonDelete){
                <SDKGridColumn TItem="TItem" Width="50px">
                    <Template Context="Data">
                        <div class="d-flex justify-content-center" data-automation-id="SDKGridButtonDelete_DeleteItem">
                            <SDKButton IconCssClass="fa-trash-can" IsActionButton=true Click="@(async () => await ClickDeleteRow(Data))" Enabled="@EnabledDelete"/>
                        </div>
                    </Template>
                </SDKGridColumn>
            }
            @Columns
        </Columns>
    </RadzenDataGrid>
</div>
@if (CardView)
{
     <div class="row">
        @if(Data != null)
        {
            @foreach (var item in Data)
            {
                <div class="col-12 col-sm-12 col-md-6 mt-3 col-xl-4">
                    <SDKCard StyleCss="sdk_card d-flex flex-row">
                        <div class="sdk_button_box p-1">
                            @(GetActionColumn()(item))
                        </div>
                        <div class="col pt-2">
                            <div class="row">
                            @foreach (var column in _grid.ColumnsCollection.Where(x=> x.CssClass != "internal-sdk-gridcolumn-action"))
                            {
                                <div class="col-12 col-sm-6">
                                    <label class="col-form-label col-form-label-sm font-weight-bold">
                                        @column.Title 
                                    </label> 
                                    @if(column.Template != null)
                                    {
                                        <p class="font_size_087">@(column.Template(item))</p>
                                    }else{
                                        <p class="font_size_087">@GetValue(item, column.Property)</p>
                                    }
                                </div> 
                            }
                            </div>
                        </div>
                    </SDKCard>
                </div>
            }
        }
    </div>
}
