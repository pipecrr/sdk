@using Microsoft.AspNetCore.Components.Forms
@using Siesa.SDK.Frontend.Components
@using Siesa.SDK.Frontend.Components.Visualization

@inherits SDKComponent

@inject IJSRuntime JSRuntime

<div class="file-upload-container">

    <div class="input-container">
        <InputFile OnChange="@_OnChange" multiple="@IsMultiple" style="width: 600px; height: 600px; " accept="@FilterType" @ref="_refinputFile"/>
    </div>
        
            @if (InputFile != null)
            {
                @if (InputFile.File.ContentType.StartsWith("image"))
                {
                    <img @ref="previewImageElem" width="200" height="100" />
                }
                else
                {
                    <i class="fa-light fa-file-pdf"></i>
                }
            
            }


        <div class="file-upload-icon">
            <i class="fa-duotone fa-arrow-up-from-bracket"></i>
        </div>

</div>

@code {

    public InputFile? _refinputFile;
    private ElementReference previewImageElem;

    private InputFileChangeEventArgs InputFile;
    [Parameter] public Action<InputFileChangeEventArgs> OnInputFile {get; set;}
    [Parameter] public bool IsMultiple {get; set;}

    [Parameter] public string FilterType {get; set;} = "image/*";

    [Parameter] public string CssClass {get; set;}

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();  
    }
    
    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();
    }


    private async Task GetPreviewFile()
    {
        if(_refinputFile != null)
        {
            await JSRuntime.InvokeVoidAsync("previewImage", _refinputFile!.Element, previewImageElem);
        }
        StateHasChanged();
    }

    private async Task _OnChange(InputFileChangeEventArgs _InputFile)
    {
        if(_InputFile != null)
        {
            InputFile = _InputFile;

            await GetPreviewFile();
            OnInputFile?.Invoke(_InputFile);
        }
    }


}