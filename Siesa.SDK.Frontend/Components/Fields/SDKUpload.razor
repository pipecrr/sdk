@using Microsoft.AspNetCore.Components;
@using Siesa.SDK.Shared.DTOS;
@using Newtonsoft.Json;
@using Siesa.SDK.Shared.Services;

@inject UtilsManager UtilManager
@inject IAuthenticationService AuthenticationService

<div class="sdk-upload">   
<RadzenUpload Url="@Url" class="@StyleCss" ChooseText="@ResourceChooseText"
Accept="@Accept" Progress="@Progress" Complete="@Complete" Change="@Change" Auto="false" @ref="sdkUpload" Disabled="@Disabled"> 
<RadzenUploadHeader Name="X-Auth-Token" Value="@AuthenticationService.UserToken"></RadzenUploadHeader>
</RadzenUpload >
</div>

@code {
    [JsonIgnore]
    [Parameter] public dynamic Business { get; set; }
    [Parameter]public string StyleCss {get; set;}
    [Parameter]public List<string> Extensions {get; set;}
    [Parameter]public bool Disabled {get; set;}
    [Parameter]public string FieldName {get; set;}
    [Parameter] public EventCallback<UploadProgressArgs> Progress {get;set;}
    [Parameter] public Action<UploadCompleteEventArgs> Complete {get;set;}
    [Parameter] public EventCallback<UploadChangeEventArgs> Change {get;set;}
    [Parameter] public string BLName {get;set;}
    private string ResourceChooseText {get; set;}
    
    private string Url {get; set;}
    private string Accept = "";
    [JsonIgnore]
    RadzenUpload sdkUpload;    
    protected override async Task OnInitializedAsync(){
        ResourceChooseText = "Custom.SDKUpload.Choose";
        ResourceChooseText = await UtilManager.GetResource("Custom.SDKUpload.Choose");
        Url = "api/"+BLName+"/UploadSingle";
        if(Business != null && !string.IsNullOrEmpty(FieldName)){
            Business.GetType().GetProperty(FieldName).SetValue(Business, this);
        }

        base.OnInitialized();
    }

    protected override void OnParametersSet(){
        if (Extensions != null){
            Accept = string.Join(", ", Extensions);
        }
    }

    public async Task Upload(){
        await sdkUpload.Upload();        
    }

    
}