@using Siesa.SDK.Shared.Services
@using Siesa.SDK.Frontend.Components.Visualization
@inject DialogService DialogService
@inject IAuthenticationService AuthenticationService

@if(ShowHeader){
     <SDKCollapse>
        <Items>
            <SDKCollapseItem ResourceTag="@Relationship.ResourceTag">
                <div class="relationship-panel-body">
                    <InlineCrud
                        BLNameParentAttatchment="@BLNameParentAttatchment"
                        BusinessName="@Relationship.RelatedBusiness"
                        Filter="@filter"
                        DefaultFieldsCreate="@DefaultFieldsCreate" AllowCreate="@AllowCreate" AllowEdit="@AllowEdit" AllowDelete="@AllowDelete"
                        AllowDetail="@AllowDetail"
                    />
                </div>
            </SDKCollapseItem>
        </Items>
    </SDKCollapse>
} else {
    <InlineCrud
        BusinessName="@Relationship.RelatedBusiness"
        Filter="@filter"
        DefaultFieldsCreate="@DefaultFieldsCreate" AllowCreate="@AllowCreate" AllowEdit="@AllowEdit" AllowDelete="@AllowDelete"
        AllowDetail="@AllowDetail" Width="@Width"
        />
}


@code {
    [Parameter] public string BLNameParentAttatchment { get; set; }
    [Parameter] public Relationship Relationship { get; set; }
    [Parameter] public dynamic Parent { get; set; }
    [Parameter] public bool AllowCreate { get; set; } = true;
    [Parameter] public bool AllowEdit { get; set; } = true;
    [Parameter] public bool AllowDelete { get; set; } = true;
    [Parameter] public bool AllowDetail { get; set; } = true;

    [Parameter] public Action<string> OnClickEdit { get; set; } = null;
    [Parameter] public Action<string> OnClickDetail { get; set; } = null;
    [Parameter] public Action<string,string> OnClickDelete { get; set; } = null;
    [Parameter] public Action OnClickNew { get; set; } = null;
    [Parameter] public bool ShowHeader { get; set; } = true;

     [Parameter] public string Width { get; set; }
    int? count = null;
    bool isOpen = false;
    string filter = "";
    Guid listview_key = Guid.NewGuid();

    private Dictionary<string, object> DefaultFieldsCreate { get; set; }

    private void OnInit()
    {
        CalculateFilter();
        DefaultFieldsCreate = new Dictionary<string, object>();
        DefaultFieldsCreate.Add(Relationship.RelatedField, Parent);
    }
    public void Toggle()
    {
        isOpen = !isOpen;
    }

    private void CalculateFilter()
    {
        var field = Relationship.RelatedField;
        var parent_rowid = 0;
        if(Parent != null)
        {
            parent_rowid = Parent.Rowid;
        }
        //remove "BaseObj" from the field name if it exists
        if (field.StartsWith("BaseObj."))
        {
            field = field.Substring(8);
        }
        if(Relationship.Type == RelationshipType.ManyToMany)
        {
            var filter_parts = field.Split('.');
            filter = $"({filter_parts[0]} != NULL && {filter_parts[0]}.Any({filter_parts[1]}.Rowid == {parent_rowid}))";
        }
        else
        {
            filter = $"({field}.Rowid == {parent_rowid})";
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        SetParameters();
        OnInit();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        SetParameters();
        OnInit();
        listview_key = Guid.NewGuid();
        StateHasChanged();     
    } 

    protected virtual void SetParameters()
    {
        var new_params = new Dictionary<string, object>();
            if (OnClickEdit != null)
            {
                new_params.Add("OnClickEdit", OnClickEdit);
            }
            if (OnClickDetail != null)
            {
                new_params.Add("OnClickDetail", OnClickDetail);
            }
            if (OnClickDelete != null)
            {
                new_params.Add("OnClickDelete", OnClickDelete);
            }
            if (OnClickNew != null)
            {
                new_params.Add("OnClickNew", OnClickNew);
            }
    }

}