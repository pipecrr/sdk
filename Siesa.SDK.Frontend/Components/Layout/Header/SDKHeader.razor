@using Siesa.SDK.Shared.Services
@using Siesa.SDK.Frontend.Components.Layout
@using Siesa.SDK.Entities;   
@inject IAuthenticationService AuthenticationService
@inject NavigationService NavigationService
@inject IJSRuntime JSRuntime
@inject Blazored.LocalStorage.ILocalStorageService localStorageService;
@layout EmptyLayout
@inject IBackendRouterService BackendRouterService
@using Newtonsoft.Json;

<header class="col-12 pl-5 sdk_header">
    <div class="header_circles_box">
        <div class="header_circles_box_1">
        </div>
        <div class="header_circles_box_2">
        </div>
        <div class="header_circles_box_3">
        </div>
        <div class="header_circles_box_4">
        </div>
    </div>
    <div class="col-xl-5 col-lg-4 col-md-4 col-sm-5 col-5 sdk_company_logo">
        <img class="whcm_logo_compania" src="_content/Siesa.SDK.Frontend/assets/img/logo_empresa.png" height="30px"
            alt="Logo compania">
    </div>
    <div class="col-xl-2 col-lg-2 col-md-2 col-sm-3 col-0 p-0 d-none d-sm-block">
        <SDKSearch />
    </div>
    <div class="col-xl-5 col-lg-6 col-md-6 col-sm-4 col-7 p-0 d-flex justify-content-end align-items-center info_head">
        <div class="sdk_conection">
            <div class="position-relative">
                <button @onclick="()=> ToogleConnect()" class="btn btn_connect py-0 px-2 px-lg-3 d-flex align-items-center">
                    <div>
                        <p class="font-weight-bold m-0 text-truncate" data-toggle="tooltip" data-placement="bottom" title="">Grupo
                            @AuthenticationService.GetRowidGroupCompany()
                        </p>
                    </div>
                    <div class="pl-2 pl-xl-3">
                        <i class="fa-solid fa-chevron-down"></i>
                    </div>
                </button>
                @if (ConnectEnabled)
                {
                    <div id="boxConnect" class="connect_tooltip" style="display:block;">
                        <label class="pt-3 px-3 pb-0 col-form-label font-weight-bold">Configurar</label>
                        <div class="p-3">
                            <form>
                                <div class="form-group connect_select_search">
                                    <label class="col-form-label col-form-label-sm font-weight-bold"
                                    for="inputGrupo">Grupo</label>
                                    <div class="d-flex form-control form-control-sm p-0">
                                        <select id="inputGrupo" class="p-1" @bind="SelectedGroup.Rowid">
                                            @foreach (var group in CompanyGroups)
                                            {
                                                <option value="@group.Rowid">Grupo @group.Rowid</option>
                                            }
                                        </select>
                                        <button>
                                            <i class="fa-solid fa-magnifying-glass"></i>
                                        </button>
                                    </div>
                                </div>
                                <button @onclick:stopPropagation="true" @onclick:preventDefault @onclick="@SetCompanyGroup" class="btn btn-primary btn_primary_def_1 btn-sm w-100 mt-2"> 
                                     @if (loading)
                                        {
                                            <p style="margin-bottom: 0 !important">Cargando<span class="spinner-border spinner-border-sm mr-1"></span></p>
                                        }else{
                                            <p style="margin-bottom: 0 !important">Cambiar Configuracion</p>
                                        }   
                                </button>
                            </form>
                            <div class="alert alert-info text-center mt-3 mb-0 font_size_087" role="alert">
                                Al cambiar la configuración se refrescará la ventana
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="whcm_footer d-flex flex-row-reverse flex-md-row align-items-center justify-content-between">
            <div class="sdk_version px-2 px-lg-3 d-flex flex-sm-row flex-md-column">
                <p class="font-weight-bold m-0 mr-2 mr-md-0">
                    <ResourceViewer ResourceTag="Project.Copy" />
                </p>
                <p class="m-0">
                    <ResourceViewer ResourceTag="Project.Version" />
                </p>
            </div>
            <div class="sdk_logo pl-3">
                <img class="whcm_logo_head d-none d-md-block"
                    src="_content/Siesa.SDK.Frontend/assets/img/LogoSiesaWHCMBlanco.png">
                <img class="whcm_logo_head d-block d-md-none"
                    src="_content/Siesa.SDK.Frontend/assets/img/LogoSiesaWHCMGris.svg">
            </div>
        </div>

    </div>
</header>

@code {

    private bool ConnectEnabled = false;

    private List<E00200_CompanyGroup> CompanyGroups { get; set; } = new List<E00200_CompanyGroup>();

    private E00200_CompanyGroup SelectedGroup { get; set; } = new E00200_CompanyGroup();

    private bool loading = false;



    protected override async Task OnInitializedAsync()
    {
        var BL = BackendRouterService.GetSDKBusinessModel("BLSDKCompanyGroup",AuthenticationService);
        
        var DataCompanyGroup = await BL.GetData(null, null);
        
        CompanyGroups = DataCompanyGroup.Data.Select(x => JsonConvert.DeserializeObject<E00200_CompanyGroup>(x)).ToList();

        SelectedGroup = CompanyGroups.FirstOrDefault(x => x.Rowid == AuthenticationService.GetRowidGroupCompany());
        if(SelectedGroup == null)
        {
            SelectedGroup = CompanyGroups.First();
            AuthenticationService.SetRowidGroupCompany(SelectedGroup.Rowid);
        }

        base.OnInitializedAsync(); 

    }

    public async  Task SetCompanyGroup()
    {
        loading = true;
        await AuthenticationService.SetRowidGroupCompany(SelectedGroup.Rowid);
        NavigationService.NavigateTo("/", forceLoad: true,replace: true);
        return;
    }
    private void ToogleConnect()
    {
        ConnectEnabled = !ConnectEnabled;
    }


}