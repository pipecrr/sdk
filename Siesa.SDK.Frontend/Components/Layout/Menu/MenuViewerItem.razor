@using Siesa.SDK.Frontend.Application
@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Frontend.Services
@using Siesa.SDK.Entities
@using System.Linq
@using Siesa.Global.Enums
@using Siesa.SDK.Shared.Services
@inject MenuService MenuService
@inject NavigationService navigationService
@inject NavigationManager NavigationManager
@inject IFeaturePermissionService FeaturePermissionService
@inject IAuthenticationService AuthenticationService

@if (Menu.Type != MenuType.Separator)
{
    @if(Menu.Feature != null && Menu.Type == MenuType.Feature && string.IsNullOrEmpty(Menu.Url))
    {
        @if(ShowItemFeature)
        {
            <div class="col-12 col-sm-6 col-md-6 col-lg-4 py-3">
            <button @onclick="@(()=>OnClickItem(Menu))" @onclick:stopPropagation="true"  class="whcm_panel_button_box w-100 text-left pt-3 h-100" >
                @if(Menu.SubMenus.Count() > 0)
                {
                    <div class="panel_button_head_icon" style="background: #@MenuService?.SelectedSuite?.HexColor" data-toggle="tooltip" data-placement="top" title="Frecuencia de contacto">
                        <i class="fa-solid fa-list-tree"></i>
                    </div>
                    <div class="whcm_panel_button h-100 panel_padd_3">
                        <a href="@Menu.CurrentURL" target="_blank"  @onclick:stopPropagation="true"  
                            class="panel_button_icon_style" style="color: #@MenuService?.SelectedSuite?.HexColor">

                            <i class="fa-solid fa-arrow-up-right-from-square"></i>
                        </a>
                        <div class="panel_button_icon_arrow">
                            <i class="fa-solid fa-chevron-right"></i>
                        </div>
                        <p class="font_color_text m-0 panel_head_text text-truncate">
                            @if(!string.IsNullOrEmpty(Menu.CurrentText))
                            {
                                @Menu.CurrentText
                            }else
                            {
                                <ResourceViewer RowidResource="@Menu.RowidResource" />   
                            }
                        </p>
                        <p class="font_color_text m-0">
                            @* @string.Join(", ", Menu.SubMenus
                                        .Where(x => !string.IsNullOrEmpty(x.CurrentText))
                                        .Select(x => x.CurrentText)) *@
    
                        </p>
                        <div class="panel_button_back" style="background: #@MenuService?.SelectedSuite?.HexColor"></div>
                    </div>
                }else
                {
                    <div class="panel_button_head text-truncate" style="background: #@MenuService?.SelectedSuite?.HexColor" data-toggle="tooltip" data-placement="top">
                        @if(!string.IsNullOrEmpty(Menu.CurrentText))
                        {
                            @Menu.CurrentText
                        }else
                        {
                            <ResourceViewer RowidResource="@Menu.RowidResource" />   
                        }
                    </div>
                    <div class="whcm_panel_button h-100">
                        <a href="@Menu.CurrentURL" target="_blank"  @onclick:stopPropagation="true"  
                        class="panel_button_icon_style" style="color: #@MenuService?.SelectedSuite?.HexColor">
                            <i class="fa-solid fa-arrow-up-right-from-square"></i>
                        </a>
                        <div class="panel_button_icon_arrow">
                            <i class="fa-solid fa-chevron-right"></i>
                        </div>
                        <p class="font_color_text m-0">
                            @* Texto Descriptivo *@
                        </p>
                        <div class="panel_button_back" style="background: #@MenuService?.SelectedSuite?.HexColor"></div>
                    </div>
                }
            </button>
        </div>
        }
    }else
    {
        <div class="col-12 col-sm-6 col-md-6 col-lg-4 py-3">
            <button @onclick="@(()=>OnClickItem(Menu))" @onclick:stopPropagation="true"  class="whcm_panel_button_box w-100 text-left pt-3 h-100" >
                @if(Menu.SubMenus.Count() > 0)
                {
                    <div class="panel_button_head_icon" style="background: #@MenuService?.SelectedSuite?.HexColor" data-toggle="tooltip" data-placement="top" title="Frecuencia de contacto">
                        <i class="fa-solid fa-list-tree"></i>
                    </div>
                    <div class="whcm_panel_button h-100 panel_padd_3">
                        <a href="@Menu.CurrentURL" target="_blank"  @onclick:stopPropagation="true"  
                            class="panel_button_icon_style" style="color: #@MenuService?.SelectedSuite?.HexColor">

                            <i class="fa-solid fa-arrow-up-right-from-square"></i>
                        </a>
                        <div class="panel_button_icon_arrow">
                            <i class="fa-solid fa-chevron-right"></i>
                        </div>
                        <p class="font_color_text m-0 panel_head_text text-truncate">
                            @if(!string.IsNullOrEmpty(Menu.CurrentText))
                            {
                                @Menu.CurrentText
                            }else
                            {
                                <ResourceViewer RowidResource="@Menu.RowidResource" />   
                            }
                        </p>
                        <p class="font_color_text m-0">
                            @* @string.Join(" , ", Menu.SubMenus
                                        .Where(x => !string.IsNullOrEmpty(x.CurrentText))
                                        .Select(x => x.CurrentText)) *@
                        </p>
                        <div class="panel_button_back" style="background: #@MenuService?.SelectedSuite?.HexColor"></div>
                    </div>
                }else
                {
                    <div class="panel_button_head text-truncate" style="background: #@MenuService?.SelectedSuite?.HexColor" data-toggle="tooltip" data-placement="top">
                        @if(!string.IsNullOrEmpty(Menu.CurrentText))
                        {
                            @Menu.CurrentText
                        }else
                        {
                            <ResourceViewer RowidResource="@Menu.RowidResource" />   
                        }
                    </div>
                    <div class="whcm_panel_button h-100">
                        <a href="@Menu.CurrentURL" target="_blank"  @onclick:stopPropagation="true"  
                        class="panel_button_icon_style" style="color: #@MenuService?.SelectedSuite?.HexColor">
                            <i class="fa-solid fa-arrow-up-right-from-square"></i>
                        </a>
                        <div class="panel_button_icon_arrow">
                            <i class="fa-solid fa-chevron-right"></i>
                        </div>
                        <p class="font_color_text m-0">
                            @* Texto descriptivo para el feature *@
                        </p>
                        <div class="panel_button_back" style="background: #@MenuService?.SelectedSuite?.HexColor"></div>
                    </div>
                }
            </button>
        </div>
    }  
}

@code {
    [Parameter]
    public E00061_Menu Menu { get; set; }
    [Parameter]
    public Action<E00061_Menu> OnClickItem { get; set; }

    private bool ShowItemFeature { get; set; }

    private async Task ItemFeature()
    {
        if(Menu.Feature != null && Menu.Type == MenuType.Feature && string.IsNullOrEmpty(Menu.Url))
        {
            ShowItemFeature = await FeaturePermissionService.CheckUserActionPermission(Menu.Feature.BusinessName, enumSDKActions.Access, AuthenticationService);
        }
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync(){
        await ItemFeature();
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await ItemFeature();
        await base.OnParametersSetAsync();
    }
}