@inherits LayoutComponentBase
@using Microsoft.Extensions.Hosting
@using Siesa.SDK.Frontend.Components.Layout.Header
@using System
@using Microsoft.AspNetCore.Components
@using Siesa.SDK.Frontend.Components.Layout.NavMenu
<RadzenDialog />
<RadzenNotification Style="top:unset !important; bottom:10px;" />
<DxGridLayout>
    <Rows>
        <DxGridLayoutRow Height="auto" />
        <DxGridLayoutRow />
    </Rows>
    <Columns>
        <DxGridLayoutColumn />
    </Columns>
    <Items>
        <DxGridLayoutItem Row="0" Column="0">
            <Template>
                <SDKHeader />
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="1" Column="0">
            <Template>
                <div class="sdk_nav">
                    <NavMenu ShowMenu="@showNavMenu" />
                        <ErrorBoundary @ref="errorBoundary">
                            <ChildContent> 
                            <aside class="col-12 sdk_home_content">
                                <div
                                    class="offset-lg-0 col-lg-12 offset-xl-0 col-xl-12 offset-xxl-1 col-xxl-10 px-0 px-md-3">

                                    <BreadCrumb />
                                    <div class="col-12 area2 px-3">
                                        <TopBar />
                                        <div class="col-12 px-0 py-3">
                                            @Body
                                        </div>
                                    </div>
                                </div>
                            </aside>
                            </ChildContent> 
                            <ErrorContent Context="Exception" >
                                <SDKError CurrentException="@Exception" Error="@errorBoundary" />
                            </ErrorContent>
                    </ErrorBoundary>
                </div>

            </Template>
        </DxGridLayoutItem>
    </Items>
</DxGridLayout>
<SDKGoTop />
@code {
    private bool showNavMenu = false;
    [Parameter]
    public bool ShowMenu { get; set; }

    private ErrorBoundary? errorBoundary;


    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        errorBoundary = new ErrorBoundary();
    }

    private void ToggleNavMenu()
    {
        showNavMenu = !showNavMenu;
        StateHasChanged();
    }

    private void HideNavMenu()
    {
        showNavMenu = false;
        StateHasChanged();
    }
}