@implements IDisposable
@inject ILayoutService LayoutService

@if(LayoutService != null && LayoutService.TopBarSetter != null)
{
    <div class="col-12 area1 pb-3 px-0">
        <nav class="" aria-label="breadcrumb">
            <ol class="breadcrumb p-0">
                <li class="breadcrumb-item"><a href="#">Gestión de personal</a></li>
                <li class="breadcrumb-item"><a href="#">Hojas de vida</a></li>
                <li class="breadcrumb-item active" aria-current="page">Prospectos</li>
            </ol>
        </nav>
        <nav class="pt-3 pt-sm-0" aria-label="breadcrumb">
            <ol class="breadcrumb p-0">
                <li class="@("bullet-breadcrumb " + LayoutService.StyleName)"></li>
                @if(LayoutService.StyleName == "toolbar_edition")
                {
                    <li class="estado">En edición</li>
                }else if(LayoutService.StyleName == "toolbar_creation")
                {
                    <li class="estado">En creación</li>
                }else {
                    <li class="estado">En consulta</li>
                }
                
            </ol>
        </nav>
    </div>
}


@code {
    protected override void OnInitialized()
    {
        LayoutService.PropertyChanged += LayoutService_PropertyChanged;
        base.OnInitialized();
    }

    private void LayoutService_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(ILayoutService.StyleName))
        {
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        if (LayoutService != null)
        {
            LayoutService.PropertyChanged -= LayoutService_PropertyChanged;
        }
    }

}