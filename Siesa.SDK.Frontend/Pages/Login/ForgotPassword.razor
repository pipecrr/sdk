@using Siesa.SDK.Frontend.Components.Fields
@using Siesa.SDK.Frontend.Components.Visualization
@using Siesa.SDK.Shared.Services
@using Siesa.SDK.Shared.DataAnnotations
@using Siesa.SDK.Frontend.Components.Layout
@using Siesa.SDK.Components.Visualization

@inject IAuthenticationService AuthenticationService
@inject SDKNotificationService NotificationService


<div class="col-12 p-0 text-center pt-4">
    <div class="alert alert-success" role="alert">
        <ResourceViewer ResourceTag="Custom.PortalLogin.PasswordRecoverMessage" RowidCulture=@RowidCulture />
    </div>
</div>
    <div class="col-12 offset-sm-2 col-sm-8 offset-md-1 col-md-10 offset-lg-2 col-lg-8 px-md-3 px-lg-0">
        
            <EditForm id="@FormID" Model="@_Model" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" >
                <DataAnnotationsValidator />
            <div class="form-group ">
                <SDKCharField Placeholder="Digite Correo de Recuperacion" @bind-Value="@_Model.EmailRecovery"/>
            </div>
            <div class="form-group ">
                <SDKButton form="@FormID" SubmitFormOnClick="true" RenderStyle="SDKButtonRenderStyle.Primary" CssClass="btn-sm w-100 mt-2">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                <ResourceViewer ResourceTag="BLUser.RecoveryPassword" RowidCulture=@RowidCulture />
                </SDKButton>
            </div>
            </EditForm>
            <SDKButton RenderStyle="SDKButtonRenderStyle.Secondary" CssClass="btn-sm w-100 mt-2" Click="()=>_login.NavigateFormLogin()">
                <ResourceViewer ResourceTag="BLUser.Login" RowidCulture=@RowidCulture />
            </SDKButton>
    </div>

@code{

    public string FormID { get; set; } = Guid.NewGuid().ToString();

    private ModelRecoveryPassword _Model = new ModelRecoveryPassword();

    private short RowidCulture { get; set; } = 1;

    private bool loading;

    [Parameter] public Login _login { get; set; }

    private async void HandleValidSubmit()
    {
        loading = true;
        var result = await AuthenticationService.ForgotPasswordAsync(_Model.EmailRecovery);

        if (result)
        {
            NotificationService.ShowSuccess("Se ha enviado un correo de recuperacion");
            _login.NavigateFormLogin();
        }
        else
        {
            NotificationService.ShowError("Algo Salio Mal");
        }
    }

    private async void HandleInvalidSubmit()
    {
        NotificationService.ShowError("Error");

    }

    public class ModelRecoveryPassword
    {
        [SDKRequired]
        public string EmailRecovery { get; set; }
    }


}
