//------------------------------------------------------------------------------
//<auto-generated>
// Generated by the DevExpress.Blazor package.
// To prevent this operation, add the DxExtendStartupHost property to the project and set this property to False.
//
// Siesa.SDK.Frontend.csproj:
//
// <Project Sdk="Microsoft.NET.Sdk.Web">
//  <PropertyGroup>
//    <TargetFramework>net6.0</TargetFramework>
//    <DxExtendStartupHost>False</DxExtendStartupHost>
//  </PropertyGroup>
//</auto-generated>
//------------------------------------------------------------------------------
using System;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.AspNetCore.Hosting;
using Microsoft.JSInterop;
using Siesa.SDK.Frontend.Components.FormManager.Model;
using Siesa.SDK.Frontend.Components.Layout;
using Microsoft.Extensions.Configuration;
using Siesa.SDK.Shared.Configurations;
using Siesa.SDK.Shared.Backend;

[assembly: HostingStartup(typeof(Siesa.SDK.Frontend.DevExpressHostingStartup))]

namespace Siesa.SDK.Frontend {
    public partial class DevExpressHostingStartup : IHostingStartup {
        void IHostingStartup.Configure(IWebHostBuilder builder) {
            builder.ConfigureServices((serviceCollection) => {
                serviceCollection.AddDevExpressBlazor();
            });
        }
    }

    public static class SiesaSecurityExtensions
    {
        public static void AddSiesaSDKFrontend(this IServiceCollection services, IConfiguration serviceConfiguration)
        {
            services.AddDevExpressBlazor();
            services.AddScoped<StateContainer>();
            services.AddScoped<ILayoutService, LayoutService>();
            ServiceConfiguration sc = serviceConfiguration.Get<ServiceConfiguration>();
            BackendManager.SetMasterBackendUrl(sc.MasterBackendUrl);

            //TODO: Definir en donde se debe hacer esto
            BackendManager.Instance.SyncWithMasterBackend();
            foreach (var backend in BackendManager.Instance.GetBackendDict())
            {
                foreach (var business in backend.Value.businessRegisters.Businesses)
                {
                    BusinessManagerFrontend.Instance.AddBusiness(business, backend.Value.Name);
                }
            }
        }

    }
}
